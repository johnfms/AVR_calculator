
calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f28  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000f28  00000f9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000fbc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000be1  00000000  00000000  00001080  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fe  00000000  00000000  00001c61  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000625  00000000  00000000  0000235f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e8  00000000  00000000  00002984  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ce  00000000  00000000  00002a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000969  00000000  00000000  00002e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  000037a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  10:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  14:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  18:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  1c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  20:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  24:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  28:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  30:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  34:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  38:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  3c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  40:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  44:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  48:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  4c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  50:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__mulsf3_pse+0x4a>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__addsf3x+0x5e>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <main+0x9a>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <__bad_interrupt>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <lcd_char+0x16>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e8 e2       	ldi	r30, 0x28	; 40
 162:	ff e0       	ldi	r31, 0x0F	; 15
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a0 38       	cpi	r26, 0x80	; 128
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>
 170:	0e 94 99 01 	call	0x332	; 0x332 <main>
 174:	0c 94 92 07 	jmp	0xf24	; 0xf24 <_exit>

00000178 <__bad_interrupt>:
 178:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017c <lcd_cmd>:

typedef unsigned char u8;

void lcd_cmd(u8 cmd)
{
	lcd_ctrl&=~(1<<rw);
 17c:	95 b3       	in	r25, 0x15	; 21
 17e:	9d 7f       	andi	r25, 0xFD	; 253
 180:	95 bb       	out	0x15, r25	; 21
	lcd_ctrl&=~(1<<rs);
 182:	95 b3       	in	r25, 0x15	; 21
 184:	9e 7f       	andi	r25, 0xFE	; 254
 186:	95 bb       	out	0x15, r25	; 21
	lcd_data=cmd;
 188:	82 bb       	out	0x12, r24	; 18
	lcd_ctrl|=(1<<e);
 18a:	85 b3       	in	r24, 0x15	; 21
 18c:	84 60       	ori	r24, 0x04	; 4
 18e:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 190:	89 ef       	ldi	r24, 0xF9	; 249
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <lcd_cmd+0x18>
 198:	00 c0       	rjmp	.+0      	; 0x19a <lcd_cmd+0x1e>
 19a:	00 00       	nop
	_delay_ms(1);
	lcd_ctrl&=~(1<<e);
 19c:	85 b3       	in	r24, 0x15	; 21
 19e:	8b 7f       	andi	r24, 0xFB	; 251
 1a0:	85 bb       	out	0x15, r24	; 21
 1a2:	08 95       	ret

000001a4 <lcd_char>:
}

void lcd_char(u8 ch)
{
	lcd_ctrl&=~(1<<rw);
 1a4:	95 b3       	in	r25, 0x15	; 21
 1a6:	9d 7f       	andi	r25, 0xFD	; 253
 1a8:	95 bb       	out	0x15, r25	; 21
	lcd_ctrl|=(1<<rs);
 1aa:	95 b3       	in	r25, 0x15	; 21
 1ac:	91 60       	ori	r25, 0x01	; 1
 1ae:	95 bb       	out	0x15, r25	; 21
	lcd_data=ch;
 1b0:	82 bb       	out	0x12, r24	; 18
	lcd_ctrl|=(1<<e);
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	84 60       	ori	r24, 0x04	; 4
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	89 ef       	ldi	r24, 0xF9	; 249
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <lcd_char+0x18>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <lcd_char+0x1e>
 1c2:	00 00       	nop
	_delay_ms(1);
	lcd_ctrl&=~(1<<e);
 1c4:	85 b3       	in	r24, 0x15	; 21
 1c6:	8b 7f       	andi	r24, 0xFB	; 251
 1c8:	85 bb       	out	0x15, r24	; 21
 1ca:	08 95       	ret

000001cc <lcd_str>:
}

void lcd_str(const char* str)
{
 1cc:	0f 93       	push	r16
 1ce:	1f 93       	push	r17
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	8c 01       	movw	r16, r24
	for (int i=0;str[i] !='\0';i++)
 1d6:	c0 e0       	ldi	r28, 0x00	; 0
 1d8:	d0 e0       	ldi	r29, 0x00	; 0
 1da:	09 c0       	rjmp	.+18     	; 0x1ee <lcd_str+0x22>
	{
		lcd_char(str[i]);
 1dc:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_char>
 1e0:	87 ea       	ldi	r24, 0xA7	; 167
 1e2:	91 e6       	ldi	r25, 0x61	; 97
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <lcd_str+0x18>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <lcd_str+0x1e>
 1ea:	00 00       	nop
	lcd_ctrl&=~(1<<e);
}

void lcd_str(const char* str)
{
	for (int i=0;str[i] !='\0';i++)
 1ec:	21 96       	adiw	r28, 0x01	; 1
 1ee:	f8 01       	movw	r30, r16
 1f0:	ec 0f       	add	r30, r28
 1f2:	fd 1f       	adc	r31, r29
 1f4:	80 81       	ld	r24, Z
 1f6:	81 11       	cpse	r24, r1
 1f8:	f1 cf       	rjmp	.-30     	; 0x1dc <lcd_str+0x10>
	{
		lcd_char(str[i]);
		_delay_ms(100);
	}
}
 1fa:	df 91       	pop	r29
 1fc:	cf 91       	pop	r28
 1fe:	1f 91       	pop	r17
 200:	0f 91       	pop	r16
 202:	08 95       	ret

00000204 <lcd_init>:

void lcd_init ()
{
	DDRD=255;//data
 204:	8f ef       	ldi	r24, 0xFF	; 255
 206:	81 bb       	out	0x11, r24	; 17
	DDRC|=(1<<rs)|(1<<e)|(1<<rw);
 208:	84 b3       	in	r24, 0x14	; 20
 20a:	87 60       	ori	r24, 0x07	; 7
 20c:	84 bb       	out	0x14, r24	; 20
 20e:	87 e8       	ldi	r24, 0x87	; 135
 210:	93 e1       	ldi	r25, 0x13	; 19
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <lcd_init+0xe>
 216:	00 c0       	rjmp	.+0      	; 0x218 <lcd_init+0x14>
 218:	00 00       	nop
	_delay_ms(20);
lcd_cmd(0x38);//1 char 1 digit
 21a:	88 e3       	ldi	r24, 0x38	; 56
 21c:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
lcd_cmd(0x0E);// display & cursor ON
 220:	8e e0       	ldi	r24, 0x0E	; 14
 222:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
lcd_cmd(0x01);//clear
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
 22c:	89 ef       	ldi	r24, 0xF9	; 249
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <lcd_init+0x2c>
 234:	00 c0       	rjmp	.+0      	; 0x236 <lcd_init+0x32>
 236:	00 00       	nop
 238:	08 95       	ret

0000023a <readKeypad>:
char readKeypad(){
	
	while(1){
		// Loop through the columns
		
		for (u8 col = 0; col < 4; col++)
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	37 c0       	rjmp	.+110    	; 0x2ac <readKeypad+0x72>
		{
			// Set data direction for columns and activate a single column
			KEYPAD_DDR = KEYPAD_COL_MASK;
 23e:	80 ef       	ldi	r24, 0xF0	; 240
 240:	8a bb       	out	0x1a, r24	; 26
			KEYPAD_PORT = ~(1 << (col + 4));  // Shift to the correct column position
 242:	43 2f       	mov	r20, r19
 244:	50 e0       	ldi	r21, 0x00	; 0
 246:	ba 01       	movw	r22, r20
 248:	6c 5f       	subi	r22, 0xFC	; 252
 24a:	7f 4f       	sbci	r23, 0xFF	; 255
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 c0       	rjmp	.+4      	; 0x256 <readKeypad+0x1c>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <readKeypad+0x18>
 25a:	80 95       	com	r24
 25c:	8b bb       	out	0x1b, r24	; 27
			
			// Check each row for a pressed key
			for (u8 row = 0; row < 4; row++)
 25e:	20 e0       	ldi	r18, 0x00	; 0
 260:	22 c0       	rjmp	.+68     	; 0x2a6 <readKeypad+0x6c>
			{
				// If a key is pressed in the current row
				if (!(KEYPAD_PIN & (1 << row)))
 262:	89 b3       	in	r24, 0x19	; 25
 264:	62 2f       	mov	r22, r18
 266:	70 e0       	ldi	r23, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	02 2e       	mov	r0, r18
 26c:	02 c0       	rjmp	.+4      	; 0x272 <readKeypad+0x38>
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	0a 94       	dec	r0
 274:	e2 f7       	brpl	.-8      	; 0x26e <readKeypad+0x34>
 276:	80 fd       	sbrc	r24, 0
 278:	15 c0       	rjmp	.+42     	; 0x2a4 <readKeypad+0x6a>
				{
					// Wait for key release
					while (!(KEYPAD_PIN & (1 << row)));
 27a:	89 b3       	in	r24, 0x19	; 25
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	06 2e       	mov	r0, r22
 280:	02 c0       	rjmp	.+4      	; 0x286 <readKeypad+0x4c>
 282:	95 95       	asr	r25
 284:	87 95       	ror	r24
 286:	0a 94       	dec	r0
 288:	e2 f7       	brpl	.-8      	; 0x282 <readKeypad+0x48>
 28a:	80 ff       	sbrs	r24, 0
 28c:	f6 cf       	rjmp	.-20     	; 0x27a <readKeypad+0x40>
					// Return the corresponding character from the keypad matrix
					return keypad[row][col];
 28e:	66 0f       	add	r22, r22
 290:	77 1f       	adc	r23, r23
 292:	66 0f       	add	r22, r22
 294:	77 1f       	adc	r23, r23
 296:	60 5a       	subi	r22, 0xA0	; 160
 298:	7f 4f       	sbci	r23, 0xFF	; 255
 29a:	fb 01       	movw	r30, r22
 29c:	e4 0f       	add	r30, r20
 29e:	f5 1f       	adc	r31, r21
 2a0:	80 81       	ld	r24, Z
 2a2:	08 95       	ret
			// Set data direction for columns and activate a single column
			KEYPAD_DDR = KEYPAD_COL_MASK;
			KEYPAD_PORT = ~(1 << (col + 4));  // Shift to the correct column position
			
			// Check each row for a pressed key
			for (u8 row = 0; row < 4; row++)
 2a4:	2f 5f       	subi	r18, 0xFF	; 255
 2a6:	24 30       	cpi	r18, 0x04	; 4
 2a8:	e0 f2       	brcs	.-72     	; 0x262 <readKeypad+0x28>
char readKeypad(){
	
	while(1){
		// Loop through the columns
		
		for (u8 col = 0; col < 4; col++)
 2aa:	3f 5f       	subi	r19, 0xFF	; 255
 2ac:	34 30       	cpi	r19, 0x04	; 4
 2ae:	38 f2       	brcs	.-114    	; 0x23e <readKeypad+0x4>
 2b0:	c4 cf       	rjmp	.-120    	; 0x23a <readKeypad>

000002b2 <keypad_scan>:
	}
	return 0;  // This line should technically never be reached
}

// Function to scan the keypad and return the pressed key
char keypad_scan(){
 2b2:	cf 93       	push	r28
	char key = readKeypad();  // Read the pressed key
 2b4:	0e 94 1d 01 	call	0x23a	; 0x23a <readKeypad>
 2b8:	c8 2f       	mov	r28, r24
	if (key != 0){
 2ba:	81 11       	cpse	r24, r1
		// Display the pressed key on the LCD (assuming LCD_DISPLAY_CHAR is defined elsewhere)
		lcd_char(key);
 2bc:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_char>
		//lcd_char('O');
	}
	return key;  // Return the pressed key
}
 2c0:	8c 2f       	mov	r24, r28
 2c2:	cf 91       	pop	r28
 2c4:	08 95       	ret

000002c6 <tonum>:
#include <string.h>
#include "lcd.h"
#include "keypad.h"
#define F_CPU 8000000UL

float tonum(char arr[]){
 2c6:	cf 92       	push	r12
 2c8:	df 92       	push	r13
 2ca:	ef 92       	push	r14
 2cc:	ff 92       	push	r15
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	ec 01       	movw	r28, r24
	float num=0;
	for (char i =0;arr[i]!='\0';i++){
 2d8:	00 e0       	ldi	r16, 0x00	; 0
#include "lcd.h"
#include "keypad.h"
#define F_CPU 8000000UL

float tonum(char arr[]){
	float num=0;
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	70 e0       	ldi	r23, 0x00	; 0
 2de:	cb 01       	movw	r24, r22
	for (char i =0;arr[i]!='\0';i++){
 2e0:	19 c0       	rjmp	.+50     	; 0x314 <tonum+0x4e>
		 num =num*10+(arr[i]-'0');
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	40 e2       	ldi	r20, 0x20	; 32
 2e8:	51 e4       	ldi	r21, 0x41	; 65
 2ea:	0e 94 9c 04 	call	0x938	; 0x938 <__mulsf3>
 2ee:	6b 01       	movw	r12, r22
 2f0:	7c 01       	movw	r14, r24
 2f2:	61 2f       	mov	r22, r17
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	60 53       	subi	r22, 0x30	; 48
 2f8:	71 09       	sbc	r23, r1
 2fa:	07 2e       	mov	r0, r23
 2fc:	00 0c       	add	r0, r0
 2fe:	88 0b       	sbc	r24, r24
 300:	99 0b       	sbc	r25, r25
 302:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__floatsisf>
 306:	9b 01       	movw	r18, r22
 308:	ac 01       	movw	r20, r24
 30a:	c7 01       	movw	r24, r14
 30c:	b6 01       	movw	r22, r12
 30e:	0e 94 07 03 	call	0x60e	; 0x60e <__addsf3>
#include "keypad.h"
#define F_CPU 8000000UL

float tonum(char arr[]){
	float num=0;
	for (char i =0;arr[i]!='\0';i++){
 312:	0f 5f       	subi	r16, 0xFF	; 255
 314:	fe 01       	movw	r30, r28
 316:	e0 0f       	add	r30, r16
 318:	f1 1d       	adc	r31, r1
 31a:	10 81       	ld	r17, Z
 31c:	11 11       	cpse	r17, r1
 31e:	e1 cf       	rjmp	.-62     	; 0x2e2 <tonum+0x1c>
		 num =num*10+(arr[i]-'0');
	}
	return num;
}
 320:	df 91       	pop	r29
 322:	cf 91       	pop	r28
 324:	1f 91       	pop	r17
 326:	0f 91       	pop	r16
 328:	ff 90       	pop	r15
 32a:	ef 90       	pop	r14
 32c:	df 90       	pop	r13
 32e:	cf 90       	pop	r12
 330:	08 95       	ret

00000332 <main>:
int main(void){
 332:	cf 93       	push	r28
 334:	df 93       	push	r29
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	a2 97       	sbiw	r28, 0x22	; 34
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	f8 94       	cli
 340:	de bf       	out	0x3e, r29	; 62
 342:	0f be       	out	0x3f, r0	; 63
 344:	cd bf       	out	0x3d, r28	; 61
	lcd_init();
 346:	0e 94 02 01 	call	0x204	; 0x204 <lcd_init>
	char i=0;
	float result=0;
	char result_str[10];
	char op;
	char firsttime=1;
	float num1=0;
 34a:	b1 2c       	mov	r11, r1
 34c:	c1 2c       	mov	r12, r1
 34e:	d1 2c       	mov	r13, r1
 350:	e1 2c       	mov	r14, r1
	int change = 0;
	char i=0;
	float result=0;
	char result_str[10];
	char op;
	char firsttime=1;
 352:	66 24       	eor	r6, r6
 354:	63 94       	inc	r6
	lcd_init();
	char num1arr[10];
	char num2arr[10];
	int change = 0;
	char i=0;
	float result=0;
 356:	71 2c       	mov	r7, r1
 358:	81 2c       	mov	r8, r1
 35a:	91 2c       	mov	r9, r1
 35c:	a1 2c       	mov	r10, r1
int main(void){
	lcd_init();
	char num1arr[10];
	char num2arr[10];
	int change = 0;
	char i=0;
 35e:	41 2c       	mov	r4, r1
}
int main(void){
	lcd_init();
	char num1arr[10];
	char num2arr[10];
	int change = 0;
 360:	21 2c       	mov	r2, r1
 362:	31 2c       	mov	r3, r1
 364:	07 c0       	rjmp	.+14     	; 0x374 <main+0x42>
				num1arr[i] = '\0';
				num1 = tonum(num1arr);
				firsttime = 0;
			}
			change=1;
			i=0;
 366:	41 2c       	mov	r4, r1
			if (firsttime == 1) {
				num1arr[i] = '\0';
				num1 = tonum(num1arr);
				firsttime = 0;
			}
			change=1;
 368:	22 24       	eor	r2, r2
 36a:	23 94       	inc	r2
 36c:	31 2c       	mov	r3, r1
 36e:	01 c0       	rjmp	.+2      	; 0x372 <main+0x40>
 370:	1f 2d       	mov	r17, r15
					lcd_str("Error: Div by 0");
					for (int j = 0; j < 10; j++) {
						num1arr[j] = 0;
						num2arr[j] = 0;
					}
					change = 0;
 372:	f1 2e       	mov	r15, r17
	char op;
	char firsttime=1;
	float num1=0;
	float num2=0;
    while (1) {	
		char key = keypad_scan();
 374:	0e 94 59 01 	call	0x2b2	; 0x2b2 <keypad_scan>
 378:	18 2f       	mov	r17, r24
		if (firsttime!=1 && (key =='+' || key=='-'  || key=='*'  || key=='/')){
 37a:	21 e0       	ldi	r18, 0x01	; 1
 37c:	62 16       	cp	r6, r18
 37e:	c1 f0       	breq	.+48     	; 0x3b0 <main+0x7e>
 380:	8b 32       	cpi	r24, 0x2B	; 43
 382:	31 f0       	breq	.+12     	; 0x390 <main+0x5e>
 384:	8d 32       	cpi	r24, 0x2D	; 45
 386:	21 f0       	breq	.+8      	; 0x390 <main+0x5e>
 388:	8a 32       	cpi	r24, 0x2A	; 42
 38a:	11 f0       	breq	.+4      	; 0x390 <main+0x5e>
 38c:	8f 32       	cpi	r24, 0x2F	; 47
 38e:	81 f4       	brne	.+32     	; 0x3b0 <main+0x7e>
				change=1;
				num1arr[i]='\0';
 390:	e1 e0       	ldi	r30, 0x01	; 1
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	ec 0f       	add	r30, r28
 396:	fd 1f       	adc	r31, r29
 398:	e4 0d       	add	r30, r4
 39a:	f1 1d       	adc	r31, r1
 39c:	10 82       	st	Z, r1
				num1=result;
 39e:	b7 2c       	mov	r11, r7
 3a0:	c8 2c       	mov	r12, r8
 3a2:	d9 2c       	mov	r13, r9
 3a4:	ea 2c       	mov	r14, r10
				i=0;
 3a6:	41 2c       	mov	r4, r1
	float num1=0;
	float num2=0;
    while (1) {	
		char key = keypad_scan();
		if (firsttime!=1 && (key =='+' || key=='-'  || key=='*'  || key=='/')){
				change=1;
 3a8:	22 24       	eor	r2, r2
 3aa:	23 94       	inc	r2
 3ac:	31 2c       	mov	r3, r1
				num1arr[i]='\0';
				num1=result;
				i=0;
				op = key;
 3ae:	e1 cf       	rjmp	.-62     	; 0x372 <main+0x40>
		}else if ( (key =='+' || key=='-'  || key=='*'  || key=='/')){
 3b0:	1b 32       	cpi	r17, 0x2B	; 43
 3b2:	31 f0       	breq	.+12     	; 0x3c0 <main+0x8e>
 3b4:	1d 32       	cpi	r17, 0x2D	; 45
 3b6:	21 f0       	breq	.+8      	; 0x3c0 <main+0x8e>
 3b8:	1a 32       	cpi	r17, 0x2A	; 42
 3ba:	11 f0       	breq	.+4      	; 0x3c0 <main+0x8e>
 3bc:	1f 32       	cpi	r17, 0x2F	; 47
 3be:	c1 f4       	brne	.+48     	; 0x3f0 <main+0xbe>
			if (firsttime == 1) {
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	68 12       	cpse	r6, r24
 3c4:	d0 cf       	rjmp	.-96     	; 0x366 <main+0x34>
				num1arr[i] = '\0';
 3c6:	e1 e0       	ldi	r30, 0x01	; 1
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	ec 0f       	add	r30, r28
 3cc:	fd 1f       	adc	r31, r29
 3ce:	e4 0d       	add	r30, r4
 3d0:	f1 1d       	adc	r31, r1
 3d2:	10 82       	st	Z, r1
				num1 = tonum(num1arr);
 3d4:	ce 01       	movw	r24, r28
 3d6:	01 96       	adiw	r24, 0x01	; 1
 3d8:	0e 94 63 01 	call	0x2c6	; 0x2c6 <tonum>
 3dc:	b6 2e       	mov	r11, r22
 3de:	c7 2e       	mov	r12, r23
 3e0:	d8 2e       	mov	r13, r24
 3e2:	e9 2e       	mov	r14, r25
				firsttime = 0;
 3e4:	61 2c       	mov	r6, r1
			}
			change=1;
			i=0;
 3e6:	41 2c       	mov	r4, r1
			if (firsttime == 1) {
				num1arr[i] = '\0';
				num1 = tonum(num1arr);
				firsttime = 0;
			}
			change=1;
 3e8:	22 24       	eor	r2, r2
 3ea:	23 94       	inc	r2
 3ec:	31 2c       	mov	r3, r1
 3ee:	c1 cf       	rjmp	.-126    	; 0x372 <main+0x40>
			i=0;
			op = key;
		}else if(key == '='){
 3f0:	1d 33       	cpi	r17, 0x3D	; 61
 3f2:	09 f0       	breq	.+2      	; 0x3f6 <main+0xc4>
 3f4:	db c0       	rjmp	.+438    	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
			change=0;
			num2arr[i]='\0';
 3f6:	eb e0       	ldi	r30, 0x0B	; 11
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	ec 0f       	add	r30, r28
 3fc:	fd 1f       	adc	r31, r29
 3fe:	e4 0d       	add	r30, r4
 400:	f1 1d       	adc	r31, r1
 402:	10 82       	st	Z, r1
			i=0;
			num2=tonum(num2arr);
 404:	ce 01       	movw	r24, r28
 406:	0b 96       	adiw	r24, 0x0b	; 11
 408:	0e 94 63 01 	call	0x2c6	; 0x2c6 <tonum>
 40c:	6f 8f       	std	Y+31, r22	; 0x1f
 40e:	78 a3       	std	Y+32, r23	; 0x20
 410:	89 a3       	std	Y+33, r24	; 0x21
 412:	9a a3       	std	Y+34, r25	; 0x22
			switch(op) {
 414:	9b e2       	ldi	r25, 0x2B	; 43
 416:	f9 16       	cp	r15, r25
 418:	69 f0       	breq	.+26     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 41a:	9f 15       	cp	r25, r15
 41c:	20 f0       	brcs	.+8      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 41e:	2a e2       	ldi	r18, 0x2A	; 42
 420:	f2 16       	cp	r15, r18
 422:	31 f1       	breq	.+76     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 424:	80 c0       	rjmp	.+256    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 426:	8d e2       	ldi	r24, 0x2D	; 45
 428:	f8 16       	cp	r15, r24
 42a:	99 f0       	breq	.+38     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 42c:	9f e2       	ldi	r25, 0x2F	; 47
 42e:	f9 16       	cp	r15, r25
 430:	71 f1       	breq	.+92     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 432:	79 c0       	rjmp	.+242    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
				case '+':result = num1 + num2;break;
 434:	2f 8d       	ldd	r18, Y+31	; 0x1f
 436:	38 a1       	ldd	r19, Y+32	; 0x20
 438:	49 a1       	ldd	r20, Y+33	; 0x21
 43a:	5a a1       	ldd	r21, Y+34	; 0x22
 43c:	6b 2d       	mov	r22, r11
 43e:	7c 2d       	mov	r23, r12
 440:	8d 2d       	mov	r24, r13
 442:	9e 2d       	mov	r25, r14
 444:	0e 94 07 03 	call	0x60e	; 0x60e <__addsf3>
 448:	76 2e       	mov	r7, r22
 44a:	87 2e       	mov	r8, r23
 44c:	98 2e       	mov	r9, r24
 44e:	a9 2e       	mov	r10, r25
 450:	6a c0       	rjmp	.+212    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
				case '-':result = num1 - num2;break;
 452:	2f 8d       	ldd	r18, Y+31	; 0x1f
 454:	38 a1       	ldd	r19, Y+32	; 0x20
 456:	49 a1       	ldd	r20, Y+33	; 0x21
 458:	5a a1       	ldd	r21, Y+34	; 0x22
 45a:	6b 2d       	mov	r22, r11
 45c:	7c 2d       	mov	r23, r12
 45e:	8d 2d       	mov	r24, r13
 460:	9e 2d       	mov	r25, r14
 462:	0e 94 06 03 	call	0x60c	; 0x60c <__subsf3>
 466:	76 2e       	mov	r7, r22
 468:	87 2e       	mov	r8, r23
 46a:	98 2e       	mov	r9, r24
 46c:	a9 2e       	mov	r10, r25
 46e:	5b c0       	rjmp	.+182    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
				case '*':result = num1 * num2;break;
 470:	2f 8d       	ldd	r18, Y+31	; 0x1f
 472:	38 a1       	ldd	r19, Y+32	; 0x20
 474:	49 a1       	ldd	r20, Y+33	; 0x21
 476:	5a a1       	ldd	r21, Y+34	; 0x22
 478:	6b 2d       	mov	r22, r11
 47a:	7c 2d       	mov	r23, r12
 47c:	8d 2d       	mov	r24, r13
 47e:	9e 2d       	mov	r25, r14
 480:	0e 94 9c 04 	call	0x938	; 0x938 <__mulsf3>
 484:	76 2e       	mov	r7, r22
 486:	87 2e       	mov	r8, r23
 488:	98 2e       	mov	r9, r24
 48a:	a9 2e       	mov	r10, r25
 48c:	4c c0       	rjmp	.+152    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
				case '/':
				if (num2 != 0) {
 48e:	20 e0       	ldi	r18, 0x00	; 0
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	a9 01       	movw	r20, r18
 494:	6f 8d       	ldd	r22, Y+31	; 0x1f
 496:	78 a1       	ldd	r23, Y+32	; 0x20
 498:	89 a1       	ldd	r24, Y+33	; 0x21
 49a:	9a a1       	ldd	r25, Y+34	; 0x22
 49c:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__cmpsf2>
 4a0:	88 23       	and	r24, r24
 4a2:	79 f0       	breq	.+30     	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
					result = num1 / num2;
 4a4:	2f 8d       	ldd	r18, Y+31	; 0x1f
 4a6:	38 a1       	ldd	r19, Y+32	; 0x20
 4a8:	49 a1       	ldd	r20, Y+33	; 0x21
 4aa:	5a a1       	ldd	r21, Y+34	; 0x22
 4ac:	6b 2d       	mov	r22, r11
 4ae:	7c 2d       	mov	r23, r12
 4b0:	8d 2d       	mov	r24, r13
 4b2:	9e 2d       	mov	r25, r14
 4b4:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__divsf3>
 4b8:	76 2e       	mov	r7, r22
 4ba:	87 2e       	mov	r8, r23
 4bc:	98 2e       	mov	r9, r24
 4be:	a9 2e       	mov	r10, r25
					lcd_cmd(0x01);
					lcd_cmd(0x80);
					firsttime=1;
					continue;
				}
				break;
 4c0:	32 c0       	rjmp	.+100    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
				case '*':result = num1 * num2;break;
				case '/':
				if (num2 != 0) {
					result = num1 / num2;
					} else {
					lcd_cmd(0xc0);
 4c2:	80 ec       	ldi	r24, 0xC0	; 192
 4c4:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
					lcd_str("Error: Div by 0");
 4c8:	80 e7       	ldi	r24, 0x70	; 112
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <lcd_str>
					for (int j = 0; j < 10; j++) {
 4d0:	80 e0       	ldi	r24, 0x00	; 0
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	0f c0       	rjmp	.+30     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
						num1arr[j] = 0;
 4d6:	e1 e0       	ldi	r30, 0x01	; 1
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	ec 0f       	add	r30, r28
 4dc:	fd 1f       	adc	r31, r29
 4de:	e8 0f       	add	r30, r24
 4e0:	f9 1f       	adc	r31, r25
 4e2:	10 82       	st	Z, r1
						num2arr[j] = 0;
 4e4:	eb e0       	ldi	r30, 0x0B	; 11
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	ec 0f       	add	r30, r28
 4ea:	fd 1f       	adc	r31, r29
 4ec:	e8 0f       	add	r30, r24
 4ee:	f9 1f       	adc	r31, r25
 4f0:	10 82       	st	Z, r1
				if (num2 != 0) {
					result = num1 / num2;
					} else {
					lcd_cmd(0xc0);
					lcd_str("Error: Div by 0");
					for (int j = 0; j < 10; j++) {
 4f2:	01 96       	adiw	r24, 0x01	; 1
 4f4:	8a 30       	cpi	r24, 0x0A	; 10
 4f6:	91 05       	cpc	r25, r1
 4f8:	74 f3       	brlt	.-36     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4fa:	2f e9       	ldi	r18, 0x9F	; 159
 4fc:	86 e8       	ldi	r24, 0x86	; 134
 4fe:	91 e0       	ldi	r25, 0x01	; 1
 500:	21 50       	subi	r18, 0x01	; 1
 502:	80 40       	sbci	r24, 0x00	; 0
 504:	90 40       	sbci	r25, 0x00	; 0
 506:	e1 f7       	brne	.-8      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 508:	00 c0       	rjmp	.+0      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 50a:	00 00       	nop
						num2arr[j] = 0;
					}
					change = 0;
					i = 0; 
					_delay_ms(500);
					lcd_cmd(0x01);
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
					lcd_cmd(0x80);
 512:	80 e8       	ldi	r24, 0x80	; 128
 514:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
					firsttime=1;
					continue;
 518:	1f 2d       	mov	r17, r15
					change = 0;
					i = 0; 
					_delay_ms(500);
					lcd_cmd(0x01);
					lcd_cmd(0x80);
					firsttime=1;
 51a:	66 24       	eor	r6, r6
 51c:	63 94       	inc	r6
					for (int j = 0; j < 10; j++) {
						num1arr[j] = 0;
						num2arr[j] = 0;
					}
					change = 0;
					i = 0; 
 51e:	41 2c       	mov	r4, r1
					lcd_str("Error: Div by 0");
					for (int j = 0; j < 10; j++) {
						num1arr[j] = 0;
						num2arr[j] = 0;
					}
					change = 0;
 520:	21 2c       	mov	r2, r1
 522:	31 2c       	mov	r3, r1
					i = 0; 
					_delay_ms(500);
					lcd_cmd(0x01);
					lcd_cmd(0x80);
					firsttime=1;
					continue;
 524:	26 cf       	rjmp	.-436    	; 0x372 <main+0x40>
				}
				break;
			}
			lcd_cmd(0xc0);
 526:	80 ec       	ldi	r24, 0xC0	; 192
 528:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
			dtostrf(result, 0, 2, result_str);//double to string
 52c:	8e 01       	movw	r16, r28
 52e:	0b 5e       	subi	r16, 0xEB	; 235
 530:	1f 4f       	sbci	r17, 0xFF	; 255
 532:	22 e0       	ldi	r18, 0x02	; 2
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	40 e0       	ldi	r20, 0x00	; 0
 538:	50 e0       	ldi	r21, 0x00	; 0
 53a:	67 2d       	mov	r22, r7
 53c:	78 2d       	mov	r23, r8
 53e:	89 2d       	mov	r24, r9
 540:	9a 2d       	mov	r25, r10
 542:	0e 94 09 05 	call	0xa12	; 0xa12 <dtostrf>
			lcd_cmd(0xC0);
 546:	80 ec       	ldi	r24, 0xC0	; 192
 548:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
			lcd_str(result_str);
 54c:	c8 01       	movw	r24, r16
 54e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <lcd_str>
			
			for (int j = 0; j < 10; j++) {
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0f c0       	rjmp	.+30     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
				num1arr[j] = 0;
 558:	e1 e0       	ldi	r30, 0x01	; 1
 55a:	f0 e0       	ldi	r31, 0x00	; 0
 55c:	ec 0f       	add	r30, r28
 55e:	fd 1f       	adc	r31, r29
 560:	e8 0f       	add	r30, r24
 562:	f9 1f       	adc	r31, r25
 564:	10 82       	st	Z, r1
				num2arr[j] = 0;
 566:	eb e0       	ldi	r30, 0x0B	; 11
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	ec 0f       	add	r30, r28
 56c:	fd 1f       	adc	r31, r29
 56e:	e8 0f       	add	r30, r24
 570:	f9 1f       	adc	r31, r25
 572:	10 82       	st	Z, r1
			lcd_cmd(0xc0);
			dtostrf(result, 0, 2, result_str);//double to string
			lcd_cmd(0xC0);
			lcd_str(result_str);
			
			for (int j = 0; j < 10; j++) {
 574:	01 96       	adiw	r24, 0x01	; 1
 576:	8a 30       	cpi	r24, 0x0A	; 10
 578:	91 05       	cpc	r25, r1
 57a:	74 f3       	brlt	.-36     	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
 57c:	2f e9       	ldi	r18, 0x9F	; 159
 57e:	86 e8       	ldi	r24, 0x86	; 134
 580:	91 e0       	ldi	r25, 0x01	; 1
 582:	21 50       	subi	r18, 0x01	; 1
 584:	80 40       	sbci	r24, 0x00	; 0
 586:	90 40       	sbci	r25, 0x00	; 0
 588:	e1 f7       	brne	.-8      	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 58a:	00 c0       	rjmp	.+0      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 58c:	00 00       	nop
				num2arr[j] = 0;
			}
			change = 0;
			i = 0;
			_delay_ms(500);
			lcd_cmd(0x01);
 58e:	81 e0       	ldi	r24, 0x01	; 1
 590:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
			lcd_cmd(0x80);
 594:	80 e8       	ldi	r24, 0x80	; 128
 596:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
			lcd_str(result_str);
 59a:	ce 01       	movw	r24, r28
 59c:	45 96       	adiw	r24, 0x15	; 21
 59e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <lcd_str>
 5a2:	1f 2d       	mov	r17, r15
			for (int j = 0; j < 10; j++) {
				num1arr[j] = 0;
				num2arr[j] = 0;
			}
			change = 0;
			i = 0;
 5a4:	41 2c       	mov	r4, r1
			
			for (int j = 0; j < 10; j++) {
				num1arr[j] = 0;
				num2arr[j] = 0;
			}
			change = 0;
 5a6:	21 2c       	mov	r2, r1
 5a8:	31 2c       	mov	r3, r1
 5aa:	e3 ce       	rjmp	.-570    	; 0x372 <main+0x40>
			i = 0;
			_delay_ms(500);
			lcd_cmd(0x01);
			lcd_cmd(0x80);
			lcd_str(result_str);
			}else if(key=='c'){
 5ac:	13 36       	cpi	r17, 0x63	; 99
 5ae:	91 f4       	brne	.+36     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
				lcd_cmd(0x01);
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_cmd>
 5b6:	1f 2d       	mov	r17, r15
				firsttime=1;
				result=0;
				num1=0;
 5b8:	b1 2c       	mov	r11, r1
 5ba:	c1 2c       	mov	r12, r1
 5bc:	d1 2c       	mov	r13, r1
 5be:	e1 2c       	mov	r14, r1
			lcd_cmd(0x01);
			lcd_cmd(0x80);
			lcd_str(result_str);
			}else if(key=='c'){
				lcd_cmd(0x01);
				firsttime=1;
 5c0:	66 24       	eor	r6, r6
 5c2:	63 94       	inc	r6
				result=0;
 5c4:	71 2c       	mov	r7, r1
 5c6:	81 2c       	mov	r8, r1
 5c8:	91 2c       	mov	r9, r1
 5ca:	a1 2c       	mov	r10, r1
				num1=0;
				num2=0;
				change=0;
				i=0;
 5cc:	41 2c       	mov	r4, r1
				lcd_cmd(0x01);
				firsttime=1;
				result=0;
				num1=0;
				num2=0;
				change=0;
 5ce:	21 2c       	mov	r2, r1
 5d0:	31 2c       	mov	r3, r1
 5d2:	cf ce       	rjmp	.-610    	; 0x372 <main+0x40>
				i=0;
				}else{
			if (change==0){
 5d4:	21 14       	cp	r2, r1
 5d6:	31 04       	cpc	r3, r1
 5d8:	51 f4       	brne	.+20     	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
				num1arr[i]=key;
 5da:	e1 e0       	ldi	r30, 0x01	; 1
 5dc:	f0 e0       	ldi	r31, 0x00	; 0
 5de:	ec 0f       	add	r30, r28
 5e0:	fd 1f       	adc	r31, r29
 5e2:	e4 0d       	add	r30, r4
 5e4:	f1 1d       	adc	r31, r1
 5e6:	10 83       	st	Z, r17
				i++;
 5e8:	43 94       	inc	r4
 5ea:	1f 2d       	mov	r17, r15
 5ec:	c2 ce       	rjmp	.-636    	; 0x372 <main+0x40>
			}else if (change==1){
 5ee:	21 e0       	ldi	r18, 0x01	; 1
 5f0:	22 16       	cp	r2, r18
 5f2:	31 04       	cpc	r3, r1
 5f4:	09 f0       	breq	.+2      	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5f6:	bc ce       	rjmp	.-648    	; 0x370 <main+0x3e>
				num2arr[i]=key;
 5f8:	eb e0       	ldi	r30, 0x0B	; 11
 5fa:	f0 e0       	ldi	r31, 0x00	; 0
 5fc:	ec 0f       	add	r30, r28
 5fe:	fd 1f       	adc	r31, r29
 600:	e4 0d       	add	r30, r4
 602:	f1 1d       	adc	r31, r1
 604:	10 83       	st	Z, r17
				i++;
 606:	43 94       	inc	r4
 608:	1f 2d       	mov	r17, r15
 60a:	b3 ce       	rjmp	.-666    	; 0x372 <main+0x40>

0000060c <__subsf3>:
 60c:	50 58       	subi	r21, 0x80	; 128

0000060e <__addsf3>:
 60e:	bb 27       	eor	r27, r27
 610:	aa 27       	eor	r26, r26
 612:	0e 94 1e 03 	call	0x63c	; 0x63c <__addsf3x>
 616:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_round>
 61a:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_pscA>
 61e:	38 f0       	brcs	.+14     	; 0x62e <__addsf3+0x20>
 620:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_pscB>
 624:	20 f0       	brcs	.+8      	; 0x62e <__addsf3+0x20>
 626:	39 f4       	brne	.+14     	; 0x636 <__addsf3+0x28>
 628:	9f 3f       	cpi	r25, 0xFF	; 255
 62a:	19 f4       	brne	.+6      	; 0x632 <__addsf3+0x24>
 62c:	26 f4       	brtc	.+8      	; 0x636 <__addsf3+0x28>
 62e:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__fp_nan>
 632:	0e f4       	brtc	.+2      	; 0x636 <__addsf3+0x28>
 634:	e0 95       	com	r30
 636:	e7 fb       	bst	r30, 7
 638:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_inf>

0000063c <__addsf3x>:
 63c:	e9 2f       	mov	r30, r25
 63e:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__fp_split3>
 642:	58 f3       	brcs	.-42     	; 0x61a <__addsf3+0xc>
 644:	ba 17       	cp	r27, r26
 646:	62 07       	cpc	r22, r18
 648:	73 07       	cpc	r23, r19
 64a:	84 07       	cpc	r24, r20
 64c:	95 07       	cpc	r25, r21
 64e:	20 f0       	brcs	.+8      	; 0x658 <__addsf3x+0x1c>
 650:	79 f4       	brne	.+30     	; 0x670 <__addsf3x+0x34>
 652:	a6 f5       	brtc	.+104    	; 0x6bc <__addsf3x+0x80>
 654:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_zero>
 658:	0e f4       	brtc	.+2      	; 0x65c <__addsf3x+0x20>
 65a:	e0 95       	com	r30
 65c:	0b 2e       	mov	r0, r27
 65e:	ba 2f       	mov	r27, r26
 660:	a0 2d       	mov	r26, r0
 662:	0b 01       	movw	r0, r22
 664:	b9 01       	movw	r22, r18
 666:	90 01       	movw	r18, r0
 668:	0c 01       	movw	r0, r24
 66a:	ca 01       	movw	r24, r20
 66c:	a0 01       	movw	r20, r0
 66e:	11 24       	eor	r1, r1
 670:	ff 27       	eor	r31, r31
 672:	59 1b       	sub	r21, r25
 674:	99 f0       	breq	.+38     	; 0x69c <__addsf3x+0x60>
 676:	59 3f       	cpi	r21, 0xF9	; 249
 678:	50 f4       	brcc	.+20     	; 0x68e <__addsf3x+0x52>
 67a:	50 3e       	cpi	r21, 0xE0	; 224
 67c:	68 f1       	brcs	.+90     	; 0x6d8 <__addsf3x+0x9c>
 67e:	1a 16       	cp	r1, r26
 680:	f0 40       	sbci	r31, 0x00	; 0
 682:	a2 2f       	mov	r26, r18
 684:	23 2f       	mov	r18, r19
 686:	34 2f       	mov	r19, r20
 688:	44 27       	eor	r20, r20
 68a:	58 5f       	subi	r21, 0xF8	; 248
 68c:	f3 cf       	rjmp	.-26     	; 0x674 <__addsf3x+0x38>
 68e:	46 95       	lsr	r20
 690:	37 95       	ror	r19
 692:	27 95       	ror	r18
 694:	a7 95       	ror	r26
 696:	f0 40       	sbci	r31, 0x00	; 0
 698:	53 95       	inc	r21
 69a:	c9 f7       	brne	.-14     	; 0x68e <__addsf3x+0x52>
 69c:	7e f4       	brtc	.+30     	; 0x6bc <__addsf3x+0x80>
 69e:	1f 16       	cp	r1, r31
 6a0:	ba 0b       	sbc	r27, r26
 6a2:	62 0b       	sbc	r22, r18
 6a4:	73 0b       	sbc	r23, r19
 6a6:	84 0b       	sbc	r24, r20
 6a8:	ba f0       	brmi	.+46     	; 0x6d8 <__addsf3x+0x9c>
 6aa:	91 50       	subi	r25, 0x01	; 1
 6ac:	a1 f0       	breq	.+40     	; 0x6d6 <__addsf3x+0x9a>
 6ae:	ff 0f       	add	r31, r31
 6b0:	bb 1f       	adc	r27, r27
 6b2:	66 1f       	adc	r22, r22
 6b4:	77 1f       	adc	r23, r23
 6b6:	88 1f       	adc	r24, r24
 6b8:	c2 f7       	brpl	.-16     	; 0x6aa <__addsf3x+0x6e>
 6ba:	0e c0       	rjmp	.+28     	; 0x6d8 <__addsf3x+0x9c>
 6bc:	ba 0f       	add	r27, r26
 6be:	62 1f       	adc	r22, r18
 6c0:	73 1f       	adc	r23, r19
 6c2:	84 1f       	adc	r24, r20
 6c4:	48 f4       	brcc	.+18     	; 0x6d8 <__addsf3x+0x9c>
 6c6:	87 95       	ror	r24
 6c8:	77 95       	ror	r23
 6ca:	67 95       	ror	r22
 6cc:	b7 95       	ror	r27
 6ce:	f7 95       	ror	r31
 6d0:	9e 3f       	cpi	r25, 0xFE	; 254
 6d2:	08 f0       	brcs	.+2      	; 0x6d6 <__addsf3x+0x9a>
 6d4:	b0 cf       	rjmp	.-160    	; 0x636 <__addsf3+0x28>
 6d6:	93 95       	inc	r25
 6d8:	88 0f       	add	r24, r24
 6da:	08 f0       	brcs	.+2      	; 0x6de <__addsf3x+0xa2>
 6dc:	99 27       	eor	r25, r25
 6de:	ee 0f       	add	r30, r30
 6e0:	97 95       	ror	r25
 6e2:	87 95       	ror	r24
 6e4:	08 95       	ret

000006e6 <__cmpsf2>:
 6e6:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_cmp>
 6ea:	08 f4       	brcc	.+2      	; 0x6ee <__cmpsf2+0x8>
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	08 95       	ret

000006f0 <__divsf3>:
 6f0:	0e 94 8c 03 	call	0x718	; 0x718 <__divsf3x>
 6f4:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_round>
 6f8:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_pscB>
 6fc:	58 f0       	brcs	.+22     	; 0x714 <__divsf3+0x24>
 6fe:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_pscA>
 702:	40 f0       	brcs	.+16     	; 0x714 <__divsf3+0x24>
 704:	29 f4       	brne	.+10     	; 0x710 <__divsf3+0x20>
 706:	5f 3f       	cpi	r21, 0xFF	; 255
 708:	29 f0       	breq	.+10     	; 0x714 <__divsf3+0x24>
 70a:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_inf>
 70e:	51 11       	cpse	r21, r1
 710:	0c 94 96 04 	jmp	0x92c	; 0x92c <__fp_szero>
 714:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__fp_nan>

00000718 <__divsf3x>:
 718:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__fp_split3>
 71c:	68 f3       	brcs	.-38     	; 0x6f8 <__divsf3+0x8>

0000071e <__divsf3_pse>:
 71e:	99 23       	and	r25, r25
 720:	b1 f3       	breq	.-20     	; 0x70e <__divsf3+0x1e>
 722:	55 23       	and	r21, r21
 724:	91 f3       	breq	.-28     	; 0x70a <__divsf3+0x1a>
 726:	95 1b       	sub	r25, r21
 728:	55 0b       	sbc	r21, r21
 72a:	bb 27       	eor	r27, r27
 72c:	aa 27       	eor	r26, r26
 72e:	62 17       	cp	r22, r18
 730:	73 07       	cpc	r23, r19
 732:	84 07       	cpc	r24, r20
 734:	38 f0       	brcs	.+14     	; 0x744 <__divsf3_pse+0x26>
 736:	9f 5f       	subi	r25, 0xFF	; 255
 738:	5f 4f       	sbci	r21, 0xFF	; 255
 73a:	22 0f       	add	r18, r18
 73c:	33 1f       	adc	r19, r19
 73e:	44 1f       	adc	r20, r20
 740:	aa 1f       	adc	r26, r26
 742:	a9 f3       	breq	.-22     	; 0x72e <__divsf3_pse+0x10>
 744:	35 d0       	rcall	.+106    	; 0x7b0 <__divsf3_pse+0x92>
 746:	0e 2e       	mov	r0, r30
 748:	3a f0       	brmi	.+14     	; 0x758 <__divsf3_pse+0x3a>
 74a:	e0 e8       	ldi	r30, 0x80	; 128
 74c:	32 d0       	rcall	.+100    	; 0x7b2 <__divsf3_pse+0x94>
 74e:	91 50       	subi	r25, 0x01	; 1
 750:	50 40       	sbci	r21, 0x00	; 0
 752:	e6 95       	lsr	r30
 754:	00 1c       	adc	r0, r0
 756:	ca f7       	brpl	.-14     	; 0x74a <__divsf3_pse+0x2c>
 758:	2b d0       	rcall	.+86     	; 0x7b0 <__divsf3_pse+0x92>
 75a:	fe 2f       	mov	r31, r30
 75c:	29 d0       	rcall	.+82     	; 0x7b0 <__divsf3_pse+0x92>
 75e:	66 0f       	add	r22, r22
 760:	77 1f       	adc	r23, r23
 762:	88 1f       	adc	r24, r24
 764:	bb 1f       	adc	r27, r27
 766:	26 17       	cp	r18, r22
 768:	37 07       	cpc	r19, r23
 76a:	48 07       	cpc	r20, r24
 76c:	ab 07       	cpc	r26, r27
 76e:	b0 e8       	ldi	r27, 0x80	; 128
 770:	09 f0       	breq	.+2      	; 0x774 <__divsf3_pse+0x56>
 772:	bb 0b       	sbc	r27, r27
 774:	80 2d       	mov	r24, r0
 776:	bf 01       	movw	r22, r30
 778:	ff 27       	eor	r31, r31
 77a:	93 58       	subi	r25, 0x83	; 131
 77c:	5f 4f       	sbci	r21, 0xFF	; 255
 77e:	3a f0       	brmi	.+14     	; 0x78e <__divsf3_pse+0x70>
 780:	9e 3f       	cpi	r25, 0xFE	; 254
 782:	51 05       	cpc	r21, r1
 784:	78 f0       	brcs	.+30     	; 0x7a4 <__divsf3_pse+0x86>
 786:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_inf>
 78a:	0c 94 96 04 	jmp	0x92c	; 0x92c <__fp_szero>
 78e:	5f 3f       	cpi	r21, 0xFF	; 255
 790:	e4 f3       	brlt	.-8      	; 0x78a <__divsf3_pse+0x6c>
 792:	98 3e       	cpi	r25, 0xE8	; 232
 794:	d4 f3       	brlt	.-12     	; 0x78a <__divsf3_pse+0x6c>
 796:	86 95       	lsr	r24
 798:	77 95       	ror	r23
 79a:	67 95       	ror	r22
 79c:	b7 95       	ror	r27
 79e:	f7 95       	ror	r31
 7a0:	9f 5f       	subi	r25, 0xFF	; 255
 7a2:	c9 f7       	brne	.-14     	; 0x796 <__divsf3_pse+0x78>
 7a4:	88 0f       	add	r24, r24
 7a6:	91 1d       	adc	r25, r1
 7a8:	96 95       	lsr	r25
 7aa:	87 95       	ror	r24
 7ac:	97 f9       	bld	r25, 7
 7ae:	08 95       	ret
 7b0:	e1 e0       	ldi	r30, 0x01	; 1
 7b2:	66 0f       	add	r22, r22
 7b4:	77 1f       	adc	r23, r23
 7b6:	88 1f       	adc	r24, r24
 7b8:	bb 1f       	adc	r27, r27
 7ba:	62 17       	cp	r22, r18
 7bc:	73 07       	cpc	r23, r19
 7be:	84 07       	cpc	r24, r20
 7c0:	ba 07       	cpc	r27, r26
 7c2:	20 f0       	brcs	.+8      	; 0x7cc <__divsf3_pse+0xae>
 7c4:	62 1b       	sub	r22, r18
 7c6:	73 0b       	sbc	r23, r19
 7c8:	84 0b       	sbc	r24, r20
 7ca:	ba 0b       	sbc	r27, r26
 7cc:	ee 1f       	adc	r30, r30
 7ce:	88 f7       	brcc	.-30     	; 0x7b2 <__divsf3_pse+0x94>
 7d0:	e0 95       	com	r30
 7d2:	08 95       	ret

000007d4 <__floatunsisf>:
 7d4:	e8 94       	clt
 7d6:	09 c0       	rjmp	.+18     	; 0x7ea <__floatsisf+0x12>

000007d8 <__floatsisf>:
 7d8:	97 fb       	bst	r25, 7
 7da:	3e f4       	brtc	.+14     	; 0x7ea <__floatsisf+0x12>
 7dc:	90 95       	com	r25
 7de:	80 95       	com	r24
 7e0:	70 95       	com	r23
 7e2:	61 95       	neg	r22
 7e4:	7f 4f       	sbci	r23, 0xFF	; 255
 7e6:	8f 4f       	sbci	r24, 0xFF	; 255
 7e8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ea:	99 23       	and	r25, r25
 7ec:	a9 f0       	breq	.+42     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 7ee:	f9 2f       	mov	r31, r25
 7f0:	96 e9       	ldi	r25, 0x96	; 150
 7f2:	bb 27       	eor	r27, r27
 7f4:	93 95       	inc	r25
 7f6:	f6 95       	lsr	r31
 7f8:	87 95       	ror	r24
 7fa:	77 95       	ror	r23
 7fc:	67 95       	ror	r22
 7fe:	b7 95       	ror	r27
 800:	f1 11       	cpse	r31, r1
 802:	f8 cf       	rjmp	.-16     	; 0x7f4 <__floatsisf+0x1c>
 804:	fa f4       	brpl	.+62     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 806:	bb 0f       	add	r27, r27
 808:	11 f4       	brne	.+4      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 80a:	60 ff       	sbrs	r22, 0
 80c:	1b c0       	rjmp	.+54     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 80e:	6f 5f       	subi	r22, 0xFF	; 255
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	16 c0       	rjmp	.+44     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 818:	88 23       	and	r24, r24
 81a:	11 f0       	breq	.+4      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 81c:	96 e9       	ldi	r25, 0x96	; 150
 81e:	11 c0       	rjmp	.+34     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 820:	77 23       	and	r23, r23
 822:	21 f0       	breq	.+8      	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 824:	9e e8       	ldi	r25, 0x8E	; 142
 826:	87 2f       	mov	r24, r23
 828:	76 2f       	mov	r23, r22
 82a:	05 c0       	rjmp	.+10     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 82c:	66 23       	and	r22, r22
 82e:	71 f0       	breq	.+28     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 830:	96 e8       	ldi	r25, 0x86	; 134
 832:	86 2f       	mov	r24, r22
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	60 e0       	ldi	r22, 0x00	; 0
 838:	2a f0       	brmi	.+10     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 83a:	9a 95       	dec	r25
 83c:	66 0f       	add	r22, r22
 83e:	77 1f       	adc	r23, r23
 840:	88 1f       	adc	r24, r24
 842:	da f7       	brpl	.-10     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 844:	88 0f       	add	r24, r24
 846:	96 95       	lsr	r25
 848:	87 95       	ror	r24
 84a:	97 f9       	bld	r25, 7
 84c:	08 95       	ret

0000084e <__fp_cmp>:
 84e:	99 0f       	add	r25, r25
 850:	00 08       	sbc	r0, r0
 852:	55 0f       	add	r21, r21
 854:	aa 0b       	sbc	r26, r26
 856:	e0 e8       	ldi	r30, 0x80	; 128
 858:	fe ef       	ldi	r31, 0xFE	; 254
 85a:	16 16       	cp	r1, r22
 85c:	17 06       	cpc	r1, r23
 85e:	e8 07       	cpc	r30, r24
 860:	f9 07       	cpc	r31, r25
 862:	c0 f0       	brcs	.+48     	; 0x894 <__stack+0x35>
 864:	12 16       	cp	r1, r18
 866:	13 06       	cpc	r1, r19
 868:	e4 07       	cpc	r30, r20
 86a:	f5 07       	cpc	r31, r21
 86c:	98 f0       	brcs	.+38     	; 0x894 <__stack+0x35>
 86e:	62 1b       	sub	r22, r18
 870:	73 0b       	sbc	r23, r19
 872:	84 0b       	sbc	r24, r20
 874:	95 0b       	sbc	r25, r21
 876:	39 f4       	brne	.+14     	; 0x886 <__stack+0x27>
 878:	0a 26       	eor	r0, r26
 87a:	61 f0       	breq	.+24     	; 0x894 <__stack+0x35>
 87c:	23 2b       	or	r18, r19
 87e:	24 2b       	or	r18, r20
 880:	25 2b       	or	r18, r21
 882:	21 f4       	brne	.+8      	; 0x88c <__stack+0x2d>
 884:	08 95       	ret
 886:	0a 26       	eor	r0, r26
 888:	09 f4       	brne	.+2      	; 0x88c <__stack+0x2d>
 88a:	a1 40       	sbci	r26, 0x01	; 1
 88c:	a6 95       	lsr	r26
 88e:	8f ef       	ldi	r24, 0xFF	; 255
 890:	81 1d       	adc	r24, r1
 892:	81 1d       	adc	r24, r1
 894:	08 95       	ret

00000896 <__fp_inf>:
 896:	97 f9       	bld	r25, 7
 898:	9f 67       	ori	r25, 0x7F	; 127
 89a:	80 e8       	ldi	r24, 0x80	; 128
 89c:	70 e0       	ldi	r23, 0x00	; 0
 89e:	60 e0       	ldi	r22, 0x00	; 0
 8a0:	08 95       	ret

000008a2 <__fp_nan>:
 8a2:	9f ef       	ldi	r25, 0xFF	; 255
 8a4:	80 ec       	ldi	r24, 0xC0	; 192
 8a6:	08 95       	ret

000008a8 <__fp_pscA>:
 8a8:	00 24       	eor	r0, r0
 8aa:	0a 94       	dec	r0
 8ac:	16 16       	cp	r1, r22
 8ae:	17 06       	cpc	r1, r23
 8b0:	18 06       	cpc	r1, r24
 8b2:	09 06       	cpc	r0, r25
 8b4:	08 95       	ret

000008b6 <__fp_pscB>:
 8b6:	00 24       	eor	r0, r0
 8b8:	0a 94       	dec	r0
 8ba:	12 16       	cp	r1, r18
 8bc:	13 06       	cpc	r1, r19
 8be:	14 06       	cpc	r1, r20
 8c0:	05 06       	cpc	r0, r21
 8c2:	08 95       	ret

000008c4 <__fp_round>:
 8c4:	09 2e       	mov	r0, r25
 8c6:	03 94       	inc	r0
 8c8:	00 0c       	add	r0, r0
 8ca:	11 f4       	brne	.+4      	; 0x8d0 <__fp_round+0xc>
 8cc:	88 23       	and	r24, r24
 8ce:	52 f0       	brmi	.+20     	; 0x8e4 <__fp_round+0x20>
 8d0:	bb 0f       	add	r27, r27
 8d2:	40 f4       	brcc	.+16     	; 0x8e4 <__fp_round+0x20>
 8d4:	bf 2b       	or	r27, r31
 8d6:	11 f4       	brne	.+4      	; 0x8dc <__fp_round+0x18>
 8d8:	60 ff       	sbrs	r22, 0
 8da:	04 c0       	rjmp	.+8      	; 0x8e4 <__fp_round+0x20>
 8dc:	6f 5f       	subi	r22, 0xFF	; 255
 8de:	7f 4f       	sbci	r23, 0xFF	; 255
 8e0:	8f 4f       	sbci	r24, 0xFF	; 255
 8e2:	9f 4f       	sbci	r25, 0xFF	; 255
 8e4:	08 95       	ret

000008e6 <__fp_split3>:
 8e6:	57 fd       	sbrc	r21, 7
 8e8:	90 58       	subi	r25, 0x80	; 128
 8ea:	44 0f       	add	r20, r20
 8ec:	55 1f       	adc	r21, r21
 8ee:	59 f0       	breq	.+22     	; 0x906 <__fp_splitA+0x10>
 8f0:	5f 3f       	cpi	r21, 0xFF	; 255
 8f2:	71 f0       	breq	.+28     	; 0x910 <__fp_splitA+0x1a>
 8f4:	47 95       	ror	r20

000008f6 <__fp_splitA>:
 8f6:	88 0f       	add	r24, r24
 8f8:	97 fb       	bst	r25, 7
 8fa:	99 1f       	adc	r25, r25
 8fc:	61 f0       	breq	.+24     	; 0x916 <__fp_splitA+0x20>
 8fe:	9f 3f       	cpi	r25, 0xFF	; 255
 900:	79 f0       	breq	.+30     	; 0x920 <__fp_splitA+0x2a>
 902:	87 95       	ror	r24
 904:	08 95       	ret
 906:	12 16       	cp	r1, r18
 908:	13 06       	cpc	r1, r19
 90a:	14 06       	cpc	r1, r20
 90c:	55 1f       	adc	r21, r21
 90e:	f2 cf       	rjmp	.-28     	; 0x8f4 <__fp_split3+0xe>
 910:	46 95       	lsr	r20
 912:	f1 df       	rcall	.-30     	; 0x8f6 <__fp_splitA>
 914:	08 c0       	rjmp	.+16     	; 0x926 <__fp_splitA+0x30>
 916:	16 16       	cp	r1, r22
 918:	17 06       	cpc	r1, r23
 91a:	18 06       	cpc	r1, r24
 91c:	99 1f       	adc	r25, r25
 91e:	f1 cf       	rjmp	.-30     	; 0x902 <__fp_splitA+0xc>
 920:	86 95       	lsr	r24
 922:	71 05       	cpc	r23, r1
 924:	61 05       	cpc	r22, r1
 926:	08 94       	sec
 928:	08 95       	ret

0000092a <__fp_zero>:
 92a:	e8 94       	clt

0000092c <__fp_szero>:
 92c:	bb 27       	eor	r27, r27
 92e:	66 27       	eor	r22, r22
 930:	77 27       	eor	r23, r23
 932:	cb 01       	movw	r24, r22
 934:	97 f9       	bld	r25, 7
 936:	08 95       	ret

00000938 <__mulsf3>:
 938:	0e 94 af 04 	call	0x95e	; 0x95e <__mulsf3x>
 93c:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_round>
 940:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_pscA>
 944:	38 f0       	brcs	.+14     	; 0x954 <__mulsf3+0x1c>
 946:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_pscB>
 94a:	20 f0       	brcs	.+8      	; 0x954 <__mulsf3+0x1c>
 94c:	95 23       	and	r25, r21
 94e:	11 f0       	breq	.+4      	; 0x954 <__mulsf3+0x1c>
 950:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_inf>
 954:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__fp_nan>
 958:	11 24       	eor	r1, r1
 95a:	0c 94 96 04 	jmp	0x92c	; 0x92c <__fp_szero>

0000095e <__mulsf3x>:
 95e:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__fp_split3>
 962:	70 f3       	brcs	.-36     	; 0x940 <__mulsf3+0x8>

00000964 <__mulsf3_pse>:
 964:	95 9f       	mul	r25, r21
 966:	c1 f3       	breq	.-16     	; 0x958 <__mulsf3+0x20>
 968:	95 0f       	add	r25, r21
 96a:	50 e0       	ldi	r21, 0x00	; 0
 96c:	55 1f       	adc	r21, r21
 96e:	62 9f       	mul	r22, r18
 970:	f0 01       	movw	r30, r0
 972:	72 9f       	mul	r23, r18
 974:	bb 27       	eor	r27, r27
 976:	f0 0d       	add	r31, r0
 978:	b1 1d       	adc	r27, r1
 97a:	63 9f       	mul	r22, r19
 97c:	aa 27       	eor	r26, r26
 97e:	f0 0d       	add	r31, r0
 980:	b1 1d       	adc	r27, r1
 982:	aa 1f       	adc	r26, r26
 984:	64 9f       	mul	r22, r20
 986:	66 27       	eor	r22, r22
 988:	b0 0d       	add	r27, r0
 98a:	a1 1d       	adc	r26, r1
 98c:	66 1f       	adc	r22, r22
 98e:	82 9f       	mul	r24, r18
 990:	22 27       	eor	r18, r18
 992:	b0 0d       	add	r27, r0
 994:	a1 1d       	adc	r26, r1
 996:	62 1f       	adc	r22, r18
 998:	73 9f       	mul	r23, r19
 99a:	b0 0d       	add	r27, r0
 99c:	a1 1d       	adc	r26, r1
 99e:	62 1f       	adc	r22, r18
 9a0:	83 9f       	mul	r24, r19
 9a2:	a0 0d       	add	r26, r0
 9a4:	61 1d       	adc	r22, r1
 9a6:	22 1f       	adc	r18, r18
 9a8:	74 9f       	mul	r23, r20
 9aa:	33 27       	eor	r19, r19
 9ac:	a0 0d       	add	r26, r0
 9ae:	61 1d       	adc	r22, r1
 9b0:	23 1f       	adc	r18, r19
 9b2:	84 9f       	mul	r24, r20
 9b4:	60 0d       	add	r22, r0
 9b6:	21 1d       	adc	r18, r1
 9b8:	82 2f       	mov	r24, r18
 9ba:	76 2f       	mov	r23, r22
 9bc:	6a 2f       	mov	r22, r26
 9be:	11 24       	eor	r1, r1
 9c0:	9f 57       	subi	r25, 0x7F	; 127
 9c2:	50 40       	sbci	r21, 0x00	; 0
 9c4:	9a f0       	brmi	.+38     	; 0x9ec <__mulsf3_pse+0x88>
 9c6:	f1 f0       	breq	.+60     	; 0xa04 <__mulsf3_pse+0xa0>
 9c8:	88 23       	and	r24, r24
 9ca:	4a f0       	brmi	.+18     	; 0x9de <__mulsf3_pse+0x7a>
 9cc:	ee 0f       	add	r30, r30
 9ce:	ff 1f       	adc	r31, r31
 9d0:	bb 1f       	adc	r27, r27
 9d2:	66 1f       	adc	r22, r22
 9d4:	77 1f       	adc	r23, r23
 9d6:	88 1f       	adc	r24, r24
 9d8:	91 50       	subi	r25, 0x01	; 1
 9da:	50 40       	sbci	r21, 0x00	; 0
 9dc:	a9 f7       	brne	.-22     	; 0x9c8 <__mulsf3_pse+0x64>
 9de:	9e 3f       	cpi	r25, 0xFE	; 254
 9e0:	51 05       	cpc	r21, r1
 9e2:	80 f0       	brcs	.+32     	; 0xa04 <__mulsf3_pse+0xa0>
 9e4:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_inf>
 9e8:	0c 94 96 04 	jmp	0x92c	; 0x92c <__fp_szero>
 9ec:	5f 3f       	cpi	r21, 0xFF	; 255
 9ee:	e4 f3       	brlt	.-8      	; 0x9e8 <__mulsf3_pse+0x84>
 9f0:	98 3e       	cpi	r25, 0xE8	; 232
 9f2:	d4 f3       	brlt	.-12     	; 0x9e8 <__mulsf3_pse+0x84>
 9f4:	86 95       	lsr	r24
 9f6:	77 95       	ror	r23
 9f8:	67 95       	ror	r22
 9fa:	b7 95       	ror	r27
 9fc:	f7 95       	ror	r31
 9fe:	e7 95       	ror	r30
 a00:	9f 5f       	subi	r25, 0xFF	; 255
 a02:	c1 f7       	brne	.-16     	; 0x9f4 <__mulsf3_pse+0x90>
 a04:	fe 2b       	or	r31, r30
 a06:	88 0f       	add	r24, r24
 a08:	91 1d       	adc	r25, r1
 a0a:	96 95       	lsr	r25
 a0c:	87 95       	ror	r24
 a0e:	97 f9       	bld	r25, 7
 a10:	08 95       	ret

00000a12 <dtostrf>:
 a12:	ef 92       	push	r14
 a14:	0f 93       	push	r16
 a16:	1f 93       	push	r17
 a18:	cf 93       	push	r28
 a1a:	df 93       	push	r29
 a1c:	e8 01       	movw	r28, r16
 a1e:	47 fd       	sbrc	r20, 7
 a20:	02 c0       	rjmp	.+4      	; 0xa26 <dtostrf+0x14>
 a22:	34 e0       	ldi	r19, 0x04	; 4
 a24:	01 c0       	rjmp	.+2      	; 0xa28 <dtostrf+0x16>
 a26:	34 e1       	ldi	r19, 0x14	; 20
 a28:	04 2e       	mov	r0, r20
 a2a:	00 0c       	add	r0, r0
 a2c:	55 0b       	sbc	r21, r21
 a2e:	57 ff       	sbrs	r21, 7
 a30:	03 c0       	rjmp	.+6      	; 0xa38 <dtostrf+0x26>
 a32:	51 95       	neg	r21
 a34:	41 95       	neg	r20
 a36:	51 09       	sbc	r21, r1
 a38:	e3 2e       	mov	r14, r19
 a3a:	02 2f       	mov	r16, r18
 a3c:	24 2f       	mov	r18, r20
 a3e:	ae 01       	movw	r20, r28
 a40:	0e 94 29 05 	call	0xa52	; 0xa52 <dtoa_prf>
 a44:	ce 01       	movw	r24, r28
 a46:	df 91       	pop	r29
 a48:	cf 91       	pop	r28
 a4a:	1f 91       	pop	r17
 a4c:	0f 91       	pop	r16
 a4e:	ef 90       	pop	r14
 a50:	08 95       	ret

00000a52 <dtoa_prf>:
 a52:	a9 e0       	ldi	r26, 0x09	; 9
 a54:	b0 e0       	ldi	r27, 0x00	; 0
 a56:	ef e2       	ldi	r30, 0x2F	; 47
 a58:	f5 e0       	ldi	r31, 0x05	; 5
 a5a:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__prologue_saves__+0xc>
 a5e:	6a 01       	movw	r12, r20
 a60:	12 2f       	mov	r17, r18
 a62:	b0 2e       	mov	r11, r16
 a64:	2b e3       	ldi	r18, 0x3B	; 59
 a66:	20 17       	cp	r18, r16
 a68:	20 f0       	brcs	.+8      	; 0xa72 <dtoa_prf+0x20>
 a6a:	ff 24       	eor	r15, r15
 a6c:	f3 94       	inc	r15
 a6e:	f0 0e       	add	r15, r16
 a70:	02 c0       	rjmp	.+4      	; 0xa76 <dtoa_prf+0x24>
 a72:	2c e3       	ldi	r18, 0x3C	; 60
 a74:	f2 2e       	mov	r15, r18
 a76:	0f 2d       	mov	r16, r15
 a78:	27 e0       	ldi	r18, 0x07	; 7
 a7a:	ae 01       	movw	r20, r28
 a7c:	4f 5f       	subi	r20, 0xFF	; 255
 a7e:	5f 4f       	sbci	r21, 0xFF	; 255
 a80:	0e 94 83 06 	call	0xd06	; 0xd06 <__ftoa_engine>
 a84:	bc 01       	movw	r22, r24
 a86:	49 81       	ldd	r20, Y+1	; 0x01
 a88:	84 2f       	mov	r24, r20
 a8a:	89 70       	andi	r24, 0x09	; 9
 a8c:	81 30       	cpi	r24, 0x01	; 1
 a8e:	31 f0       	breq	.+12     	; 0xa9c <dtoa_prf+0x4a>
 a90:	e1 fc       	sbrc	r14, 1
 a92:	06 c0       	rjmp	.+12     	; 0xaa0 <dtoa_prf+0x4e>
 a94:	e0 fe       	sbrs	r14, 0
 a96:	06 c0       	rjmp	.+12     	; 0xaa4 <dtoa_prf+0x52>
 a98:	90 e2       	ldi	r25, 0x20	; 32
 a9a:	05 c0       	rjmp	.+10     	; 0xaa6 <dtoa_prf+0x54>
 a9c:	9d e2       	ldi	r25, 0x2D	; 45
 a9e:	03 c0       	rjmp	.+6      	; 0xaa6 <dtoa_prf+0x54>
 aa0:	9b e2       	ldi	r25, 0x2B	; 43
 aa2:	01 c0       	rjmp	.+2      	; 0xaa6 <dtoa_prf+0x54>
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	5e 2d       	mov	r21, r14
 aa8:	50 71       	andi	r21, 0x10	; 16
 aaa:	43 ff       	sbrs	r20, 3
 aac:	3c c0       	rjmp	.+120    	; 0xb26 <dtoa_prf+0xd4>
 aae:	91 11       	cpse	r25, r1
 ab0:	02 c0       	rjmp	.+4      	; 0xab6 <dtoa_prf+0x64>
 ab2:	83 e0       	ldi	r24, 0x03	; 3
 ab4:	01 c0       	rjmp	.+2      	; 0xab8 <dtoa_prf+0x66>
 ab6:	84 e0       	ldi	r24, 0x04	; 4
 ab8:	81 17       	cp	r24, r17
 aba:	18 f4       	brcc	.+6      	; 0xac2 <dtoa_prf+0x70>
 abc:	21 2f       	mov	r18, r17
 abe:	28 1b       	sub	r18, r24
 ac0:	01 c0       	rjmp	.+2      	; 0xac4 <dtoa_prf+0x72>
 ac2:	20 e0       	ldi	r18, 0x00	; 0
 ac4:	51 11       	cpse	r21, r1
 ac6:	0b c0       	rjmp	.+22     	; 0xade <dtoa_prf+0x8c>
 ac8:	f6 01       	movw	r30, r12
 aca:	82 2f       	mov	r24, r18
 acc:	30 e2       	ldi	r19, 0x20	; 32
 ace:	88 23       	and	r24, r24
 ad0:	19 f0       	breq	.+6      	; 0xad8 <dtoa_prf+0x86>
 ad2:	31 93       	st	Z+, r19
 ad4:	81 50       	subi	r24, 0x01	; 1
 ad6:	fb cf       	rjmp	.-10     	; 0xace <dtoa_prf+0x7c>
 ad8:	c2 0e       	add	r12, r18
 ada:	d1 1c       	adc	r13, r1
 adc:	20 e0       	ldi	r18, 0x00	; 0
 ade:	99 23       	and	r25, r25
 ae0:	29 f0       	breq	.+10     	; 0xaec <dtoa_prf+0x9a>
 ae2:	d6 01       	movw	r26, r12
 ae4:	9c 93       	st	X, r25
 ae6:	f6 01       	movw	r30, r12
 ae8:	31 96       	adiw	r30, 0x01	; 1
 aea:	6f 01       	movw	r12, r30
 aec:	c6 01       	movw	r24, r12
 aee:	03 96       	adiw	r24, 0x03	; 3
 af0:	e2 fe       	sbrs	r14, 2
 af2:	0a c0       	rjmp	.+20     	; 0xb08 <dtoa_prf+0xb6>
 af4:	3e e4       	ldi	r19, 0x4E	; 78
 af6:	d6 01       	movw	r26, r12
 af8:	3c 93       	st	X, r19
 afa:	41 e4       	ldi	r20, 0x41	; 65
 afc:	11 96       	adiw	r26, 0x01	; 1
 afe:	4c 93       	st	X, r20
 b00:	11 97       	sbiw	r26, 0x01	; 1
 b02:	12 96       	adiw	r26, 0x02	; 2
 b04:	3c 93       	st	X, r19
 b06:	06 c0       	rjmp	.+12     	; 0xb14 <dtoa_prf+0xc2>
 b08:	3e e6       	ldi	r19, 0x6E	; 110
 b0a:	f6 01       	movw	r30, r12
 b0c:	30 83       	st	Z, r19
 b0e:	41 e6       	ldi	r20, 0x61	; 97
 b10:	41 83       	std	Z+1, r20	; 0x01
 b12:	32 83       	std	Z+2, r19	; 0x02
 b14:	fc 01       	movw	r30, r24
 b16:	32 2f       	mov	r19, r18
 b18:	40 e2       	ldi	r20, 0x20	; 32
 b1a:	33 23       	and	r19, r19
 b1c:	09 f4       	brne	.+2      	; 0xb20 <dtoa_prf+0xce>
 b1e:	42 c0       	rjmp	.+132    	; 0xba4 <dtoa_prf+0x152>
 b20:	41 93       	st	Z+, r20
 b22:	31 50       	subi	r19, 0x01	; 1
 b24:	fa cf       	rjmp	.-12     	; 0xb1a <dtoa_prf+0xc8>
 b26:	42 ff       	sbrs	r20, 2
 b28:	44 c0       	rjmp	.+136    	; 0xbb2 <dtoa_prf+0x160>
 b2a:	91 11       	cpse	r25, r1
 b2c:	02 c0       	rjmp	.+4      	; 0xb32 <dtoa_prf+0xe0>
 b2e:	83 e0       	ldi	r24, 0x03	; 3
 b30:	01 c0       	rjmp	.+2      	; 0xb34 <dtoa_prf+0xe2>
 b32:	84 e0       	ldi	r24, 0x04	; 4
 b34:	81 17       	cp	r24, r17
 b36:	18 f4       	brcc	.+6      	; 0xb3e <dtoa_prf+0xec>
 b38:	21 2f       	mov	r18, r17
 b3a:	28 1b       	sub	r18, r24
 b3c:	01 c0       	rjmp	.+2      	; 0xb40 <dtoa_prf+0xee>
 b3e:	20 e0       	ldi	r18, 0x00	; 0
 b40:	51 11       	cpse	r21, r1
 b42:	0b c0       	rjmp	.+22     	; 0xb5a <dtoa_prf+0x108>
 b44:	f6 01       	movw	r30, r12
 b46:	82 2f       	mov	r24, r18
 b48:	30 e2       	ldi	r19, 0x20	; 32
 b4a:	88 23       	and	r24, r24
 b4c:	19 f0       	breq	.+6      	; 0xb54 <dtoa_prf+0x102>
 b4e:	31 93       	st	Z+, r19
 b50:	81 50       	subi	r24, 0x01	; 1
 b52:	fb cf       	rjmp	.-10     	; 0xb4a <dtoa_prf+0xf8>
 b54:	c2 0e       	add	r12, r18
 b56:	d1 1c       	adc	r13, r1
 b58:	20 e0       	ldi	r18, 0x00	; 0
 b5a:	99 23       	and	r25, r25
 b5c:	29 f0       	breq	.+10     	; 0xb68 <dtoa_prf+0x116>
 b5e:	d6 01       	movw	r26, r12
 b60:	9c 93       	st	X, r25
 b62:	f6 01       	movw	r30, r12
 b64:	31 96       	adiw	r30, 0x01	; 1
 b66:	6f 01       	movw	r12, r30
 b68:	c6 01       	movw	r24, r12
 b6a:	03 96       	adiw	r24, 0x03	; 3
 b6c:	e2 fe       	sbrs	r14, 2
 b6e:	0b c0       	rjmp	.+22     	; 0xb86 <dtoa_prf+0x134>
 b70:	39 e4       	ldi	r19, 0x49	; 73
 b72:	d6 01       	movw	r26, r12
 b74:	3c 93       	st	X, r19
 b76:	3e e4       	ldi	r19, 0x4E	; 78
 b78:	11 96       	adiw	r26, 0x01	; 1
 b7a:	3c 93       	st	X, r19
 b7c:	11 97       	sbiw	r26, 0x01	; 1
 b7e:	36 e4       	ldi	r19, 0x46	; 70
 b80:	12 96       	adiw	r26, 0x02	; 2
 b82:	3c 93       	st	X, r19
 b84:	07 c0       	rjmp	.+14     	; 0xb94 <dtoa_prf+0x142>
 b86:	39 e6       	ldi	r19, 0x69	; 105
 b88:	f6 01       	movw	r30, r12
 b8a:	30 83       	st	Z, r19
 b8c:	3e e6       	ldi	r19, 0x6E	; 110
 b8e:	31 83       	std	Z+1, r19	; 0x01
 b90:	36 e6       	ldi	r19, 0x66	; 102
 b92:	32 83       	std	Z+2, r19	; 0x02
 b94:	fc 01       	movw	r30, r24
 b96:	32 2f       	mov	r19, r18
 b98:	40 e2       	ldi	r20, 0x20	; 32
 b9a:	33 23       	and	r19, r19
 b9c:	19 f0       	breq	.+6      	; 0xba4 <dtoa_prf+0x152>
 b9e:	41 93       	st	Z+, r20
 ba0:	31 50       	subi	r19, 0x01	; 1
 ba2:	fb cf       	rjmp	.-10     	; 0xb9a <dtoa_prf+0x148>
 ba4:	fc 01       	movw	r30, r24
 ba6:	e2 0f       	add	r30, r18
 ba8:	f1 1d       	adc	r31, r1
 baa:	10 82       	st	Z, r1
 bac:	8e ef       	ldi	r24, 0xFE	; 254
 bae:	9f ef       	ldi	r25, 0xFF	; 255
 bb0:	a6 c0       	rjmp	.+332    	; 0xcfe <dtoa_prf+0x2ac>
 bb2:	21 e0       	ldi	r18, 0x01	; 1
 bb4:	30 e0       	ldi	r19, 0x00	; 0
 bb6:	91 11       	cpse	r25, r1
 bb8:	02 c0       	rjmp	.+4      	; 0xbbe <dtoa_prf+0x16c>
 bba:	20 e0       	ldi	r18, 0x00	; 0
 bbc:	30 e0       	ldi	r19, 0x00	; 0
 bbe:	16 16       	cp	r1, r22
 bc0:	17 06       	cpc	r1, r23
 bc2:	1c f4       	brge	.+6      	; 0xbca <dtoa_prf+0x178>
 bc4:	fb 01       	movw	r30, r22
 bc6:	31 96       	adiw	r30, 0x01	; 1
 bc8:	02 c0       	rjmp	.+4      	; 0xbce <dtoa_prf+0x17c>
 bca:	e1 e0       	ldi	r30, 0x01	; 1
 bcc:	f0 e0       	ldi	r31, 0x00	; 0
 bce:	2e 0f       	add	r18, r30
 bd0:	3f 1f       	adc	r19, r31
 bd2:	bb 20       	and	r11, r11
 bd4:	21 f0       	breq	.+8      	; 0xbde <dtoa_prf+0x18c>
 bd6:	eb 2d       	mov	r30, r11
 bd8:	f0 e0       	ldi	r31, 0x00	; 0
 bda:	31 96       	adiw	r30, 0x01	; 1
 bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <dtoa_prf+0x190>
 bde:	e0 e0       	ldi	r30, 0x00	; 0
 be0:	f0 e0       	ldi	r31, 0x00	; 0
 be2:	2e 0f       	add	r18, r30
 be4:	3f 1f       	adc	r19, r31
 be6:	e1 2f       	mov	r30, r17
 be8:	f0 e0       	ldi	r31, 0x00	; 0
 bea:	2e 17       	cp	r18, r30
 bec:	3f 07       	cpc	r19, r31
 bee:	1c f4       	brge	.+6      	; 0xbf6 <dtoa_prf+0x1a4>
 bf0:	12 1b       	sub	r17, r18
 bf2:	21 2f       	mov	r18, r17
 bf4:	01 c0       	rjmp	.+2      	; 0xbf8 <dtoa_prf+0x1a6>
 bf6:	20 e0       	ldi	r18, 0x00	; 0
 bf8:	8e 2d       	mov	r24, r14
 bfa:	88 71       	andi	r24, 0x18	; 24
 bfc:	59 f4       	brne	.+22     	; 0xc14 <dtoa_prf+0x1c2>
 bfe:	f6 01       	movw	r30, r12
 c00:	82 2f       	mov	r24, r18
 c02:	30 e2       	ldi	r19, 0x20	; 32
 c04:	88 23       	and	r24, r24
 c06:	19 f0       	breq	.+6      	; 0xc0e <dtoa_prf+0x1bc>
 c08:	31 93       	st	Z+, r19
 c0a:	81 50       	subi	r24, 0x01	; 1
 c0c:	fb cf       	rjmp	.-10     	; 0xc04 <dtoa_prf+0x1b2>
 c0e:	c2 0e       	add	r12, r18
 c10:	d1 1c       	adc	r13, r1
 c12:	20 e0       	ldi	r18, 0x00	; 0
 c14:	99 23       	and	r25, r25
 c16:	29 f0       	breq	.+10     	; 0xc22 <dtoa_prf+0x1d0>
 c18:	d6 01       	movw	r26, r12
 c1a:	9c 93       	st	X, r25
 c1c:	f6 01       	movw	r30, r12
 c1e:	31 96       	adiw	r30, 0x01	; 1
 c20:	6f 01       	movw	r12, r30
 c22:	51 11       	cpse	r21, r1
 c24:	0b c0       	rjmp	.+22     	; 0xc3c <dtoa_prf+0x1ea>
 c26:	f6 01       	movw	r30, r12
 c28:	82 2f       	mov	r24, r18
 c2a:	90 e3       	ldi	r25, 0x30	; 48
 c2c:	88 23       	and	r24, r24
 c2e:	19 f0       	breq	.+6      	; 0xc36 <dtoa_prf+0x1e4>
 c30:	91 93       	st	Z+, r25
 c32:	81 50       	subi	r24, 0x01	; 1
 c34:	fb cf       	rjmp	.-10     	; 0xc2c <dtoa_prf+0x1da>
 c36:	c2 0e       	add	r12, r18
 c38:	d1 1c       	adc	r13, r1
 c3a:	20 e0       	ldi	r18, 0x00	; 0
 c3c:	0f 2d       	mov	r16, r15
 c3e:	06 0f       	add	r16, r22
 c40:	9a 81       	ldd	r25, Y+2	; 0x02
 c42:	34 2f       	mov	r19, r20
 c44:	30 71       	andi	r19, 0x10	; 16
 c46:	44 ff       	sbrs	r20, 4
 c48:	03 c0       	rjmp	.+6      	; 0xc50 <dtoa_prf+0x1fe>
 c4a:	91 33       	cpi	r25, 0x31	; 49
 c4c:	09 f4       	brne	.+2      	; 0xc50 <dtoa_prf+0x1fe>
 c4e:	01 50       	subi	r16, 0x01	; 1
 c50:	10 16       	cp	r1, r16
 c52:	24 f4       	brge	.+8      	; 0xc5c <dtoa_prf+0x20a>
 c54:	09 30       	cpi	r16, 0x09	; 9
 c56:	18 f0       	brcs	.+6      	; 0xc5e <dtoa_prf+0x20c>
 c58:	08 e0       	ldi	r16, 0x08	; 8
 c5a:	01 c0       	rjmp	.+2      	; 0xc5e <dtoa_prf+0x20c>
 c5c:	01 e0       	ldi	r16, 0x01	; 1
 c5e:	ab 01       	movw	r20, r22
 c60:	77 ff       	sbrs	r23, 7
 c62:	02 c0       	rjmp	.+4      	; 0xc68 <dtoa_prf+0x216>
 c64:	40 e0       	ldi	r20, 0x00	; 0
 c66:	50 e0       	ldi	r21, 0x00	; 0
 c68:	fb 01       	movw	r30, r22
 c6a:	e4 1b       	sub	r30, r20
 c6c:	f5 0b       	sbc	r31, r21
 c6e:	a1 e0       	ldi	r26, 0x01	; 1
 c70:	b0 e0       	ldi	r27, 0x00	; 0
 c72:	ac 0f       	add	r26, r28
 c74:	bd 1f       	adc	r27, r29
 c76:	ea 0f       	add	r30, r26
 c78:	fb 1f       	adc	r31, r27
 c7a:	8e e2       	ldi	r24, 0x2E	; 46
 c7c:	a8 2e       	mov	r10, r24
 c7e:	4b 01       	movw	r8, r22
 c80:	80 1a       	sub	r8, r16
 c82:	91 08       	sbc	r9, r1
 c84:	0b 2d       	mov	r16, r11
 c86:	10 e0       	ldi	r17, 0x00	; 0
 c88:	11 95       	neg	r17
 c8a:	01 95       	neg	r16
 c8c:	11 09       	sbc	r17, r1
 c8e:	4f 3f       	cpi	r20, 0xFF	; 255
 c90:	bf ef       	ldi	r27, 0xFF	; 255
 c92:	5b 07       	cpc	r21, r27
 c94:	21 f4       	brne	.+8      	; 0xc9e <dtoa_prf+0x24c>
 c96:	d6 01       	movw	r26, r12
 c98:	ac 92       	st	X, r10
 c9a:	11 96       	adiw	r26, 0x01	; 1
 c9c:	6d 01       	movw	r12, r26
 c9e:	64 17       	cp	r22, r20
 ca0:	75 07       	cpc	r23, r21
 ca2:	2c f0       	brlt	.+10     	; 0xcae <dtoa_prf+0x25c>
 ca4:	84 16       	cp	r8, r20
 ca6:	95 06       	cpc	r9, r21
 ca8:	14 f4       	brge	.+4      	; 0xcae <dtoa_prf+0x25c>
 caa:	81 81       	ldd	r24, Z+1	; 0x01
 cac:	01 c0       	rjmp	.+2      	; 0xcb0 <dtoa_prf+0x25e>
 cae:	80 e3       	ldi	r24, 0x30	; 48
 cb0:	41 50       	subi	r20, 0x01	; 1
 cb2:	51 09       	sbc	r21, r1
 cb4:	31 96       	adiw	r30, 0x01	; 1
 cb6:	d6 01       	movw	r26, r12
 cb8:	11 96       	adiw	r26, 0x01	; 1
 cba:	7d 01       	movw	r14, r26
 cbc:	40 17       	cp	r20, r16
 cbe:	51 07       	cpc	r21, r17
 cc0:	24 f0       	brlt	.+8      	; 0xcca <dtoa_prf+0x278>
 cc2:	d6 01       	movw	r26, r12
 cc4:	8c 93       	st	X, r24
 cc6:	67 01       	movw	r12, r14
 cc8:	e2 cf       	rjmp	.-60     	; 0xc8e <dtoa_prf+0x23c>
 cca:	64 17       	cp	r22, r20
 ccc:	75 07       	cpc	r23, r21
 cce:	39 f4       	brne	.+14     	; 0xcde <dtoa_prf+0x28c>
 cd0:	96 33       	cpi	r25, 0x36	; 54
 cd2:	20 f4       	brcc	.+8      	; 0xcdc <dtoa_prf+0x28a>
 cd4:	95 33       	cpi	r25, 0x35	; 53
 cd6:	19 f4       	brne	.+6      	; 0xcde <dtoa_prf+0x28c>
 cd8:	31 11       	cpse	r19, r1
 cda:	01 c0       	rjmp	.+2      	; 0xcde <dtoa_prf+0x28c>
 cdc:	81 e3       	ldi	r24, 0x31	; 49
 cde:	f6 01       	movw	r30, r12
 ce0:	80 83       	st	Z, r24
 ce2:	f7 01       	movw	r30, r14
 ce4:	82 2f       	mov	r24, r18
 ce6:	90 e2       	ldi	r25, 0x20	; 32
 ce8:	88 23       	and	r24, r24
 cea:	19 f0       	breq	.+6      	; 0xcf2 <dtoa_prf+0x2a0>
 cec:	91 93       	st	Z+, r25
 cee:	81 50       	subi	r24, 0x01	; 1
 cf0:	fb cf       	rjmp	.-10     	; 0xce8 <dtoa_prf+0x296>
 cf2:	f7 01       	movw	r30, r14
 cf4:	e2 0f       	add	r30, r18
 cf6:	f1 1d       	adc	r31, r1
 cf8:	10 82       	st	Z, r1
 cfa:	80 e0       	ldi	r24, 0x00	; 0
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	29 96       	adiw	r28, 0x09	; 9
 d00:	ec e0       	ldi	r30, 0x0C	; 12
 d02:	0c 94 7d 07 	jmp	0xefa	; 0xefa <__epilogue_restores__+0xc>

00000d06 <__ftoa_engine>:
 d06:	28 30       	cpi	r18, 0x08	; 8
 d08:	08 f0       	brcs	.+2      	; 0xd0c <__ftoa_engine+0x6>
 d0a:	27 e0       	ldi	r18, 0x07	; 7
 d0c:	33 27       	eor	r19, r19
 d0e:	da 01       	movw	r26, r20
 d10:	99 0f       	add	r25, r25
 d12:	31 1d       	adc	r19, r1
 d14:	87 fd       	sbrc	r24, 7
 d16:	91 60       	ori	r25, 0x01	; 1
 d18:	00 96       	adiw	r24, 0x00	; 0
 d1a:	61 05       	cpc	r22, r1
 d1c:	71 05       	cpc	r23, r1
 d1e:	39 f4       	brne	.+14     	; 0xd2e <__ftoa_engine+0x28>
 d20:	32 60       	ori	r19, 0x02	; 2
 d22:	2e 5f       	subi	r18, 0xFE	; 254
 d24:	3d 93       	st	X+, r19
 d26:	30 e3       	ldi	r19, 0x30	; 48
 d28:	2a 95       	dec	r18
 d2a:	e1 f7       	brne	.-8      	; 0xd24 <__ftoa_engine+0x1e>
 d2c:	08 95       	ret
 d2e:	9f 3f       	cpi	r25, 0xFF	; 255
 d30:	30 f0       	brcs	.+12     	; 0xd3e <__ftoa_engine+0x38>
 d32:	80 38       	cpi	r24, 0x80	; 128
 d34:	71 05       	cpc	r23, r1
 d36:	61 05       	cpc	r22, r1
 d38:	09 f0       	breq	.+2      	; 0xd3c <__ftoa_engine+0x36>
 d3a:	3c 5f       	subi	r19, 0xFC	; 252
 d3c:	3c 5f       	subi	r19, 0xFC	; 252
 d3e:	3d 93       	st	X+, r19
 d40:	91 30       	cpi	r25, 0x01	; 1
 d42:	08 f0       	brcs	.+2      	; 0xd46 <__ftoa_engine+0x40>
 d44:	80 68       	ori	r24, 0x80	; 128
 d46:	91 1d       	adc	r25, r1
 d48:	df 93       	push	r29
 d4a:	cf 93       	push	r28
 d4c:	1f 93       	push	r17
 d4e:	0f 93       	push	r16
 d50:	ff 92       	push	r15
 d52:	ef 92       	push	r14
 d54:	19 2f       	mov	r17, r25
 d56:	98 7f       	andi	r25, 0xF8	; 248
 d58:	96 95       	lsr	r25
 d5a:	e9 2f       	mov	r30, r25
 d5c:	96 95       	lsr	r25
 d5e:	96 95       	lsr	r25
 d60:	e9 0f       	add	r30, r25
 d62:	ff 27       	eor	r31, r31
 d64:	e2 55       	subi	r30, 0x52	; 82
 d66:	ff 4f       	sbci	r31, 0xFF	; 255
 d68:	99 27       	eor	r25, r25
 d6a:	33 27       	eor	r19, r19
 d6c:	ee 24       	eor	r14, r14
 d6e:	ff 24       	eor	r15, r15
 d70:	a7 01       	movw	r20, r14
 d72:	e7 01       	movw	r28, r14
 d74:	05 90       	lpm	r0, Z+
 d76:	08 94       	sec
 d78:	07 94       	ror	r0
 d7a:	28 f4       	brcc	.+10     	; 0xd86 <__ftoa_engine+0x80>
 d7c:	36 0f       	add	r19, r22
 d7e:	e7 1e       	adc	r14, r23
 d80:	f8 1e       	adc	r15, r24
 d82:	49 1f       	adc	r20, r25
 d84:	51 1d       	adc	r21, r1
 d86:	66 0f       	add	r22, r22
 d88:	77 1f       	adc	r23, r23
 d8a:	88 1f       	adc	r24, r24
 d8c:	99 1f       	adc	r25, r25
 d8e:	06 94       	lsr	r0
 d90:	a1 f7       	brne	.-24     	; 0xd7a <__ftoa_engine+0x74>
 d92:	05 90       	lpm	r0, Z+
 d94:	07 94       	ror	r0
 d96:	28 f4       	brcc	.+10     	; 0xda2 <__ftoa_engine+0x9c>
 d98:	e7 0e       	add	r14, r23
 d9a:	f8 1e       	adc	r15, r24
 d9c:	49 1f       	adc	r20, r25
 d9e:	56 1f       	adc	r21, r22
 da0:	c1 1d       	adc	r28, r1
 da2:	77 0f       	add	r23, r23
 da4:	88 1f       	adc	r24, r24
 da6:	99 1f       	adc	r25, r25
 da8:	66 1f       	adc	r22, r22
 daa:	06 94       	lsr	r0
 dac:	a1 f7       	brne	.-24     	; 0xd96 <__ftoa_engine+0x90>
 dae:	05 90       	lpm	r0, Z+
 db0:	07 94       	ror	r0
 db2:	28 f4       	brcc	.+10     	; 0xdbe <__ftoa_engine+0xb8>
 db4:	f8 0e       	add	r15, r24
 db6:	49 1f       	adc	r20, r25
 db8:	56 1f       	adc	r21, r22
 dba:	c7 1f       	adc	r28, r23
 dbc:	d1 1d       	adc	r29, r1
 dbe:	88 0f       	add	r24, r24
 dc0:	99 1f       	adc	r25, r25
 dc2:	66 1f       	adc	r22, r22
 dc4:	77 1f       	adc	r23, r23
 dc6:	06 94       	lsr	r0
 dc8:	a1 f7       	brne	.-24     	; 0xdb2 <__ftoa_engine+0xac>
 dca:	05 90       	lpm	r0, Z+
 dcc:	07 94       	ror	r0
 dce:	20 f4       	brcc	.+8      	; 0xdd8 <__ftoa_engine+0xd2>
 dd0:	49 0f       	add	r20, r25
 dd2:	56 1f       	adc	r21, r22
 dd4:	c7 1f       	adc	r28, r23
 dd6:	d8 1f       	adc	r29, r24
 dd8:	99 0f       	add	r25, r25
 dda:	66 1f       	adc	r22, r22
 ddc:	77 1f       	adc	r23, r23
 dde:	88 1f       	adc	r24, r24
 de0:	06 94       	lsr	r0
 de2:	a9 f7       	brne	.-22     	; 0xdce <__ftoa_engine+0xc8>
 de4:	84 91       	lpm	r24, Z
 de6:	10 95       	com	r17
 de8:	17 70       	andi	r17, 0x07	; 7
 dea:	41 f0       	breq	.+16     	; 0xdfc <__ftoa_engine+0xf6>
 dec:	d6 95       	lsr	r29
 dee:	c7 95       	ror	r28
 df0:	57 95       	ror	r21
 df2:	47 95       	ror	r20
 df4:	f7 94       	ror	r15
 df6:	e7 94       	ror	r14
 df8:	1a 95       	dec	r17
 dfa:	c1 f7       	brne	.-16     	; 0xdec <__ftoa_engine+0xe6>
 dfc:	e4 e5       	ldi	r30, 0x54	; 84
 dfe:	f0 e0       	ldi	r31, 0x00	; 0
 e00:	68 94       	set
 e02:	15 90       	lpm	r1, Z+
 e04:	15 91       	lpm	r17, Z+
 e06:	35 91       	lpm	r19, Z+
 e08:	65 91       	lpm	r22, Z+
 e0a:	95 91       	lpm	r25, Z+
 e0c:	05 90       	lpm	r0, Z+
 e0e:	7f e2       	ldi	r23, 0x2F	; 47
 e10:	73 95       	inc	r23
 e12:	e1 18       	sub	r14, r1
 e14:	f1 0a       	sbc	r15, r17
 e16:	43 0b       	sbc	r20, r19
 e18:	56 0b       	sbc	r21, r22
 e1a:	c9 0b       	sbc	r28, r25
 e1c:	d0 09       	sbc	r29, r0
 e1e:	c0 f7       	brcc	.-16     	; 0xe10 <__ftoa_engine+0x10a>
 e20:	e1 0c       	add	r14, r1
 e22:	f1 1e       	adc	r15, r17
 e24:	43 1f       	adc	r20, r19
 e26:	56 1f       	adc	r21, r22
 e28:	c9 1f       	adc	r28, r25
 e2a:	d0 1d       	adc	r29, r0
 e2c:	7e f4       	brtc	.+30     	; 0xe4c <__ftoa_engine+0x146>
 e2e:	70 33       	cpi	r23, 0x30	; 48
 e30:	11 f4       	brne	.+4      	; 0xe36 <__ftoa_engine+0x130>
 e32:	8a 95       	dec	r24
 e34:	e6 cf       	rjmp	.-52     	; 0xe02 <__ftoa_engine+0xfc>
 e36:	e8 94       	clt
 e38:	01 50       	subi	r16, 0x01	; 1
 e3a:	30 f0       	brcs	.+12     	; 0xe48 <__ftoa_engine+0x142>
 e3c:	08 0f       	add	r16, r24
 e3e:	0a f4       	brpl	.+2      	; 0xe42 <__ftoa_engine+0x13c>
 e40:	00 27       	eor	r16, r16
 e42:	02 17       	cp	r16, r18
 e44:	08 f4       	brcc	.+2      	; 0xe48 <__ftoa_engine+0x142>
 e46:	20 2f       	mov	r18, r16
 e48:	23 95       	inc	r18
 e4a:	02 2f       	mov	r16, r18
 e4c:	7a 33       	cpi	r23, 0x3A	; 58
 e4e:	28 f0       	brcs	.+10     	; 0xe5a <__ftoa_engine+0x154>
 e50:	79 e3       	ldi	r23, 0x39	; 57
 e52:	7d 93       	st	X+, r23
 e54:	2a 95       	dec	r18
 e56:	e9 f7       	brne	.-6      	; 0xe52 <__ftoa_engine+0x14c>
 e58:	10 c0       	rjmp	.+32     	; 0xe7a <__ftoa_engine+0x174>
 e5a:	7d 93       	st	X+, r23
 e5c:	2a 95       	dec	r18
 e5e:	89 f6       	brne	.-94     	; 0xe02 <__ftoa_engine+0xfc>
 e60:	06 94       	lsr	r0
 e62:	97 95       	ror	r25
 e64:	67 95       	ror	r22
 e66:	37 95       	ror	r19
 e68:	17 95       	ror	r17
 e6a:	17 94       	ror	r1
 e6c:	e1 18       	sub	r14, r1
 e6e:	f1 0a       	sbc	r15, r17
 e70:	43 0b       	sbc	r20, r19
 e72:	56 0b       	sbc	r21, r22
 e74:	c9 0b       	sbc	r28, r25
 e76:	d0 09       	sbc	r29, r0
 e78:	98 f0       	brcs	.+38     	; 0xea0 <__ftoa_engine+0x19a>
 e7a:	23 95       	inc	r18
 e7c:	7e 91       	ld	r23, -X
 e7e:	73 95       	inc	r23
 e80:	7a 33       	cpi	r23, 0x3A	; 58
 e82:	08 f0       	brcs	.+2      	; 0xe86 <__ftoa_engine+0x180>
 e84:	70 e3       	ldi	r23, 0x30	; 48
 e86:	7c 93       	st	X, r23
 e88:	20 13       	cpse	r18, r16
 e8a:	b8 f7       	brcc	.-18     	; 0xe7a <__ftoa_engine+0x174>
 e8c:	7e 91       	ld	r23, -X
 e8e:	70 61       	ori	r23, 0x10	; 16
 e90:	7d 93       	st	X+, r23
 e92:	30 f0       	brcs	.+12     	; 0xea0 <__ftoa_engine+0x19a>
 e94:	83 95       	inc	r24
 e96:	71 e3       	ldi	r23, 0x31	; 49
 e98:	7d 93       	st	X+, r23
 e9a:	70 e3       	ldi	r23, 0x30	; 48
 e9c:	2a 95       	dec	r18
 e9e:	e1 f7       	brne	.-8      	; 0xe98 <__ftoa_engine+0x192>
 ea0:	11 24       	eor	r1, r1
 ea2:	ef 90       	pop	r14
 ea4:	ff 90       	pop	r15
 ea6:	0f 91       	pop	r16
 ea8:	1f 91       	pop	r17
 eaa:	cf 91       	pop	r28
 eac:	df 91       	pop	r29
 eae:	99 27       	eor	r25, r25
 eb0:	87 fd       	sbrc	r24, 7
 eb2:	90 95       	com	r25
 eb4:	08 95       	ret

00000eb6 <__prologue_saves__>:
 eb6:	2f 92       	push	r2
 eb8:	3f 92       	push	r3
 eba:	4f 92       	push	r4
 ebc:	5f 92       	push	r5
 ebe:	6f 92       	push	r6
 ec0:	7f 92       	push	r7
 ec2:	8f 92       	push	r8
 ec4:	9f 92       	push	r9
 ec6:	af 92       	push	r10
 ec8:	bf 92       	push	r11
 eca:	cf 92       	push	r12
 ecc:	df 92       	push	r13
 ece:	ef 92       	push	r14
 ed0:	ff 92       	push	r15
 ed2:	0f 93       	push	r16
 ed4:	1f 93       	push	r17
 ed6:	cf 93       	push	r28
 ed8:	df 93       	push	r29
 eda:	cd b7       	in	r28, 0x3d	; 61
 edc:	de b7       	in	r29, 0x3e	; 62
 ede:	ca 1b       	sub	r28, r26
 ee0:	db 0b       	sbc	r29, r27
 ee2:	0f b6       	in	r0, 0x3f	; 63
 ee4:	f8 94       	cli
 ee6:	de bf       	out	0x3e, r29	; 62
 ee8:	0f be       	out	0x3f, r0	; 63
 eea:	cd bf       	out	0x3d, r28	; 61
 eec:	09 94       	ijmp

00000eee <__epilogue_restores__>:
 eee:	2a 88       	ldd	r2, Y+18	; 0x12
 ef0:	39 88       	ldd	r3, Y+17	; 0x11
 ef2:	48 88       	ldd	r4, Y+16	; 0x10
 ef4:	5f 84       	ldd	r5, Y+15	; 0x0f
 ef6:	6e 84       	ldd	r6, Y+14	; 0x0e
 ef8:	7d 84       	ldd	r7, Y+13	; 0x0d
 efa:	8c 84       	ldd	r8, Y+12	; 0x0c
 efc:	9b 84       	ldd	r9, Y+11	; 0x0b
 efe:	aa 84       	ldd	r10, Y+10	; 0x0a
 f00:	b9 84       	ldd	r11, Y+9	; 0x09
 f02:	c8 84       	ldd	r12, Y+8	; 0x08
 f04:	df 80       	ldd	r13, Y+7	; 0x07
 f06:	ee 80       	ldd	r14, Y+6	; 0x06
 f08:	fd 80       	ldd	r15, Y+5	; 0x05
 f0a:	0c 81       	ldd	r16, Y+4	; 0x04
 f0c:	1b 81       	ldd	r17, Y+3	; 0x03
 f0e:	aa 81       	ldd	r26, Y+2	; 0x02
 f10:	b9 81       	ldd	r27, Y+1	; 0x01
 f12:	ce 0f       	add	r28, r30
 f14:	d1 1d       	adc	r29, r1
 f16:	0f b6       	in	r0, 0x3f	; 63
 f18:	f8 94       	cli
 f1a:	de bf       	out	0x3e, r29	; 62
 f1c:	0f be       	out	0x3f, r0	; 63
 f1e:	cd bf       	out	0x3d, r28	; 61
 f20:	ed 01       	movw	r28, r26
 f22:	08 95       	ret

00000f24 <_exit>:
 f24:	f8 94       	cli

00000f26 <__stop_program>:
 f26:	ff cf       	rjmp	.-2      	; 0xf26 <__stop_program>
